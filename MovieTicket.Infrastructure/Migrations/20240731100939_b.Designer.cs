// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTicket.Infrastructure.Database.AppDbContexts;

#nullable disable

namespace MovieTicket.Infrastructure.Migrations
{
    [DbContext(typeof(MovieTicketReadOnlyDbContext))]
    [Migration("20240731100939_b")]
    partial class b
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieTicket.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd36705c-0610-4c30-9cfb-e5827b3f3d78"),
                            Address = "Address 1",
                            Avatar = "avatar1.png",
                            CreateDate = new DateTime(2023, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "azusachan307@gmail.com",
                            Name = "ClientTest",
                            Password = "LK25tQh1RqkKbrq4C2l6fw==",
                            Phone = "000-000-000",
                            Role = 1,
                            Status = 1,
                            Username = "Admin"
                        },
                        new
                        {
                            Id = new Guid("100a0997-d9bb-4274-8fa3-64bebc4c57ed"),
                            Address = "Address 1",
                            Avatar = "avatar1.png",
                            CreateDate = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@example.com",
                            Name = "User 1",
                            Password = "ei00xFxTj/yW/ErUUw1JvA==",
                            Phone = "123-456-7891",
                            Role = 2,
                            Status = 1,
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("ed51a820-6f1f-47ba-8f00-2dbdda43ddb8"),
                            Address = "Address 2",
                            Avatar = "avatar2.png",
                            CreateDate = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@example.com",
                            Name = "User 2",
                            Password = "gPFa6fSRCX/O3JCnJjTBBg==",
                            Phone = "123-456-7892",
                            Role = 2,
                            Status = 1,
                            Username = "user2"
                        },
                        new
                        {
                            Id = new Guid("bf8516c9-b5a9-44d8-ac06-e521df7515a4"),
                            Address = "Address 3",
                            Avatar = "avatar3.png",
                            CreateDate = new DateTime(2023, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@example.com",
                            Name = "User 3",
                            Password = "XZG20Zjr0RmKJ42oxCGZqQ==",
                            Phone = "123-456-7893",
                            Role = 2,
                            Status = 1,
                            Username = "user3"
                        },
                        new
                        {
                            Id = new Guid("b49b5fca-1abb-445b-8044-f67efa815c97"),
                            Address = "Address 4",
                            Avatar = "avatar4.png",
                            CreateDate = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@example.com",
                            Name = "User 4",
                            Password = "AYCB0pkX1QvnELN5s4E7/w==",
                            Phone = "123-456-7894",
                            Role = 2,
                            Status = 1,
                            Username = "user4"
                        },
                        new
                        {
                            Id = new Guid("c785dd9d-95f6-4866-aa85-c7a689748b38"),
                            Address = "Address 5",
                            Avatar = "avatar5.png",
                            CreateDate = new DateTime(2023, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@example.com",
                            Name = "User 5",
                            Password = "LtgxZLXxd71ac78V6rYtcg==",
                            Phone = "123-456-7895",
                            Role = 2,
                            Status = 1,
                            Username = "user5"
                        },
                        new
                        {
                            Id = new Guid("548b268c-8c8e-4ead-98fb-cf28fbcd7584"),
                            Address = "Address 6",
                            Avatar = "avatar6.png",
                            CreateDate = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@example.com",
                            Name = "User 6",
                            Password = "ns3cIzMXn9uRJUqXbdf1sw==",
                            Phone = "123-456-7896",
                            Role = 2,
                            Status = 1,
                            Username = "user6"
                        },
                        new
                        {
                            Id = new Guid("e50aed7b-bc35-4734-8aa4-5b75045a08e4"),
                            Address = "Address 7",
                            Avatar = "avatar7.png",
                            CreateDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@example.com",
                            Name = "User 7",
                            Password = "h8t5vD5p1U3C4AEASeaErg==",
                            Phone = "123-456-7897",
                            Role = 2,
                            Status = 1,
                            Username = "user7"
                        },
                        new
                        {
                            Id = new Guid("b92ca198-9890-4d2c-8560-82a372ca8c9d"),
                            Address = "Address 8",
                            Avatar = "avatar8.png",
                            CreateDate = new DateTime(2023, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@example.com",
                            Name = "User 8",
                            Password = "QoNqXwm6ndtmwV7AptAudw==",
                            Phone = "123-456-7898",
                            Role = 2,
                            Status = 1,
                            Username = "user8"
                        },
                        new
                        {
                            Id = new Guid("6620ed76-2a1c-4b7b-b714-b5aac9aed3cb"),
                            Address = "Address 9",
                            Avatar = "avatar9.png",
                            CreateDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@example.com",
                            Name = "User 9",
                            Password = "XLl70iIryQx+lE/y5900Uw==",
                            Phone = "123-456-7899",
                            Role = 2,
                            Status = 1,
                            Username = "user9"
                        },
                        new
                        {
                            Id = new Guid("4bef1c85-3cd7-4858-b66c-b9a7dd57a053"),
                            Address = "Address 10",
                            Avatar = "avatar10.png",
                            CreateDate = new DateTime(2023, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@example.com",
                            Name = "User 10",
                            Password = "AD+DKAMne24G+bFvnB3umA==",
                            Phone = "123-456-78910",
                            Role = 2,
                            Status = 1,
                            Username = "user10"
                        },
                        new
                        {
                            Id = new Guid("b668db4c-2ab6-4387-b4b0-8d25c4a32d0f"),
                            Address = "Address 11",
                            Avatar = "avatar11.png",
                            CreateDate = new DateTime(2023, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user11@example.com",
                            Name = "User 11",
                            Password = "+1XAkm3H0MciMPlnUyv6ww==",
                            Phone = "123-456-78911",
                            Role = 2,
                            Status = 1,
                            Username = "user11"
                        },
                        new
                        {
                            Id = new Guid("d2f761f1-4326-47da-8a91-1a132d40b430"),
                            Address = "Address 12",
                            Avatar = "avatar12.png",
                            CreateDate = new DateTime(2023, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user12@example.com",
                            Name = "User 12",
                            Password = "q/b7mh1nE1JeI7y/w6yvIQ==",
                            Phone = "123-456-78912",
                            Role = 2,
                            Status = 1,
                            Username = "user12"
                        },
                        new
                        {
                            Id = new Guid("8214f599-c342-4ae0-b01f-4c2374a6bc9e"),
                            Address = "Address 13",
                            Avatar = "avatar13.png",
                            CreateDate = new DateTime(2023, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user13@example.com",
                            Name = "User 13",
                            Password = "hjKFGDVLaz8y7jip9ebjyg==",
                            Phone = "123-456-78913",
                            Role = 2,
                            Status = 1,
                            Username = "user13"
                        },
                        new
                        {
                            Id = new Guid("bf09a02e-f8d7-40f7-bb92-9a69a45d68fc"),
                            Address = "Address 14",
                            Avatar = "avatar14.png",
                            CreateDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user14@example.com",
                            Name = "User 14",
                            Password = "Nbb9cBgoI2KknXYhJgRsOg==",
                            Phone = "123-456-78914",
                            Role = 2,
                            Status = 1,
                            Username = "user14"
                        },
                        new
                        {
                            Id = new Guid("fe6bf84f-121b-4a02-befc-fb7efd51fb01"),
                            Address = "Address 15",
                            Avatar = "avatar15.png",
                            CreateDate = new DateTime(2023, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user15@example.com",
                            Name = "User 15",
                            Password = "AtoLhqKWoDhm5ytm7x3CFg==",
                            Phone = "123-456-78915",
                            Role = 2,
                            Status = 1,
                            Username = "user15"
                        },
                        new
                        {
                            Id = new Guid("fe86a433-8c10-4bb5-b38d-f85f725f1e59"),
                            Address = "Address 16",
                            Avatar = "avatar16.png",
                            CreateDate = new DateTime(2023, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user16@example.com",
                            Name = "User 16",
                            Password = "1+4JJ+OIs+XRXx0vTPNGQA==",
                            Phone = "123-456-78916",
                            Role = 2,
                            Status = 1,
                            Username = "user16"
                        },
                        new
                        {
                            Id = new Guid("67e93741-519d-4108-9cdc-9fc8efaec862"),
                            Address = "Address 17",
                            Avatar = "avatar17.png",
                            CreateDate = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user17@example.com",
                            Name = "User 17",
                            Password = "bnivYPkMUcJNzvYQyXZIvw==",
                            Phone = "123-456-78917",
                            Role = 2,
                            Status = 1,
                            Username = "user17"
                        },
                        new
                        {
                            Id = new Guid("3a9b3b56-cc15-4f0d-b9fb-ce254e535192"),
                            Address = "Address 18",
                            Avatar = "avatar18.png",
                            CreateDate = new DateTime(2023, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user18@example.com",
                            Name = "User 18",
                            Password = "zp6jPz/JRrDgXS7tmjREDQ==",
                            Phone = "123-456-78918",
                            Role = 2,
                            Status = 1,
                            Username = "user18"
                        },
                        new
                        {
                            Id = new Guid("a6ef0f22-e446-4a86-84dc-c50a86c5c8f0"),
                            Address = "Address 19",
                            Avatar = "avatar19.png",
                            CreateDate = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user19@example.com",
                            Name = "User 19",
                            Password = "+BFH+L+RScNaLm45T9M5Tw==",
                            Phone = "123-456-78919",
                            Role = 2,
                            Status = 1,
                            Username = "user19"
                        },
                        new
                        {
                            Id = new Guid("4837af52-558f-49f2-84c1-ba170e394d2a"),
                            Address = "Address 20",
                            Avatar = "avatar20.png",
                            CreateDate = new DateTime(2023, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user20@example.com",
                            Name = "User 20",
                            Password = "J20oEfuyjDdy085hSNPLIw==",
                            Phone = "123-456-78920",
                            Role = 2,
                            Status = 1,
                            Username = "user20"
                        },
                        new
                        {
                            Id = new Guid("548d6e00-aec1-4bd0-9fb8-002985ae1992"),
                            Address = "Address 21",
                            Avatar = "avatar21.png",
                            CreateDate = new DateTime(2023, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user21@example.com",
                            Name = "User 21",
                            Password = "uqWAcnIuI+ey7XOiRgb8IA==",
                            Phone = "123-456-78921",
                            Role = 2,
                            Status = 1,
                            Username = "user21"
                        },
                        new
                        {
                            Id = new Guid("df8c7b2b-dc01-43c6-833d-915feb4eb506"),
                            Address = "Address 22",
                            Avatar = "avatar22.png",
                            CreateDate = new DateTime(2023, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user22@example.com",
                            Name = "User 22",
                            Password = "yuwYTyVSnjUQg9d58Fr6eg==",
                            Phone = "123-456-78922",
                            Role = 2,
                            Status = 1,
                            Username = "user22"
                        },
                        new
                        {
                            Id = new Guid("599296a1-8676-45ee-9b96-eb965c82e4d1"),
                            Address = "Address 23",
                            Avatar = "avatar23.png",
                            CreateDate = new DateTime(2023, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user23@example.com",
                            Name = "User 23",
                            Password = "JM3wDHJHLSLI6Wdnnfs2dQ==",
                            Phone = "123-456-78923",
                            Role = 2,
                            Status = 1,
                            Username = "user23"
                        },
                        new
                        {
                            Id = new Guid("44bff1d8-4028-4198-b210-2b04d5f9f3d1"),
                            Address = "Address 24",
                            Avatar = "avatar24.png",
                            CreateDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user24@example.com",
                            Name = "User 24",
                            Password = "wUy5uoNVQITmQW5R4nnOMA==",
                            Phone = "123-456-78924",
                            Role = 2,
                            Status = 1,
                            Username = "user24"
                        },
                        new
                        {
                            Id = new Guid("5e6797fc-bcba-4be3-8798-46b7cfd53ddc"),
                            Address = "Address 25",
                            Avatar = "avatar25.png",
                            CreateDate = new DateTime(2023, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user25@example.com",
                            Name = "User 25",
                            Password = "o+65kwYOgM/H5YtlR5eBGQ==",
                            Phone = "123-456-78925",
                            Role = 2,
                            Status = 1,
                            Username = "user25"
                        },
                        new
                        {
                            Id = new Guid("8ca9ecdd-822c-4ce6-a48e-ec4f41a11410"),
                            Address = "Address 26",
                            Avatar = "avatar26.png",
                            CreateDate = new DateTime(2023, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user26@example.com",
                            Name = "User 26",
                            Password = "JTjto+r7kPyCkZGQtsDBOA==",
                            Phone = "123-456-78926",
                            Role = 2,
                            Status = 1,
                            Username = "user26"
                        },
                        new
                        {
                            Id = new Guid("ba8427c3-58c3-4a3e-bc05-662a73b85b3f"),
                            Address = "Address 27",
                            Avatar = "avatar27.png",
                            CreateDate = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user27@example.com",
                            Name = "User 27",
                            Password = "lePABwdtIg5MqkBgyFdL9Q==",
                            Phone = "123-456-78927",
                            Role = 2,
                            Status = 1,
                            Username = "user27"
                        },
                        new
                        {
                            Id = new Guid("edf25f38-066a-4e89-961d-573a7c0df11e"),
                            Address = "Address 28",
                            Avatar = "avatar28.png",
                            CreateDate = new DateTime(2023, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user28@example.com",
                            Name = "User 28",
                            Password = "R/9+ITDUv36NqhUmUxCu5w==",
                            Phone = "123-456-78928",
                            Role = 2,
                            Status = 1,
                            Username = "user28"
                        },
                        new
                        {
                            Id = new Guid("f0d833a6-6508-4cae-96a4-0ea788468878"),
                            Address = "Address 29",
                            Avatar = "avatar29.png",
                            CreateDate = new DateTime(2023, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user29@example.com",
                            Name = "User 29",
                            Password = "ETdpo/KPinCotdzGNmsAPA==",
                            Phone = "123-456-78929",
                            Role = 2,
                            Status = 1,
                            Username = "user29"
                        },
                        new
                        {
                            Id = new Guid("4dafb3be-bf4b-4702-ba27-d1c68862484a"),
                            Address = "Address 30",
                            Avatar = "avatar30.png",
                            CreateDate = new DateTime(2023, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user30@example.com",
                            Name = "User 30",
                            Password = "ZIc8EakA57j1Q7JTsakLKA==",
                            Phone = "123-456-78930",
                            Role = 2,
                            Status = 1,
                            Username = "user30"
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .HasColumnType("date");

                    b.Property<Guid?>("MembershipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.BillCombo", b =>
                {
                    b.Property<Guid?>("ComboId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComboId", "BillId");

                    b.HasIndex("BillId");

                    b.ToTable("BillCombos");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.BillSeat", b =>
                {
                    b.Property<Guid>("SeatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SeatId", "BillId");

                    b.HasIndex("BillId");

                    b.ToTable("BillSeats");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Cinema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Column")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxSeatCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaCenterId");

                    b.HasIndex("CinemaTypeId")
                        .IsUnique()
                        .HasFilter("[CinemaTypeId] IS NOT NULL");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.CinemaCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CinemaCenters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("187d213d-5bd3-4637-8ec6-9e4c753f431c"),
                            Address = "Address 1",
                            Name = "Cinema Center 1"
                        },
                        new
                        {
                            Id = new Guid("9f5a6b82-3056-4067-b0b9-97eebac18ec3"),
                            Address = "Address 2",
                            Name = "Cinema Center 2"
                        },
                        new
                        {
                            Id = new Guid("00c8f6be-4afe-4cdb-a2b3-ca1ccf6ff4fd"),
                            Address = "Address 3",
                            Name = "Cinema Center 3"
                        },
                        new
                        {
                            Id = new Guid("3acd69c0-49f5-4906-a957-e65f8e938389"),
                            Address = "Address 4",
                            Name = "Cinema Center 4"
                        },
                        new
                        {
                            Id = new Guid("abe48929-1738-42e2-9da4-60a342a89f3e"),
                            Address = "Address 5",
                            Name = "Cinema Center 5"
                        },
                        new
                        {
                            Id = new Guid("d507a173-ff07-45e5-a4df-a9979ccbe178"),
                            Address = "Address 6",
                            Name = "Cinema Center 6"
                        },
                        new
                        {
                            Id = new Guid("4f172015-1a51-4ff6-b55f-926f294654b7"),
                            Address = "Address 7",
                            Name = "Cinema Center 7"
                        },
                        new
                        {
                            Id = new Guid("9aee7925-f917-471a-82f4-759e3c0cc539"),
                            Address = "Address 8",
                            Name = "Cinema Center 8"
                        },
                        new
                        {
                            Id = new Guid("abd211da-8e2f-45a9-8c80-9c82cf3011bf"),
                            Address = "Address 9",
                            Name = "Cinema Center 9"
                        },
                        new
                        {
                            Id = new Guid("36d2e895-94dd-4bf4-b91a-3a9702984a5c"),
                            Address = "Address 10",
                            Name = "Cinema Center 10"
                        },
                        new
                        {
                            Id = new Guid("b7b670ba-cc79-4ee3-873e-d6d9abe488bf"),
                            Address = "Address 11",
                            Name = "Cinema Center 11"
                        },
                        new
                        {
                            Id = new Guid("9a1e6d38-df5a-4158-a02e-7da0273f7111"),
                            Address = "Address 12",
                            Name = "Cinema Center 12"
                        },
                        new
                        {
                            Id = new Guid("554e7c41-8a76-4b1b-9317-7226804ff1c0"),
                            Address = "Address 13",
                            Name = "Cinema Center 13"
                        },
                        new
                        {
                            Id = new Guid("bfaa66d3-a9be-413c-8947-f2b95987ce3e"),
                            Address = "Address 14",
                            Name = "Cinema Center 14"
                        },
                        new
                        {
                            Id = new Guid("3a9d8939-2ed1-4370-90f8-e3e58a4c2744"),
                            Address = "Address 15",
                            Name = "Cinema Center 15"
                        },
                        new
                        {
                            Id = new Guid("e1850bdf-9133-48c0-b489-dbd93bc971b0"),
                            Address = "Address 16",
                            Name = "Cinema Center 16"
                        },
                        new
                        {
                            Id = new Guid("6f1cab67-92b7-4ab8-b73a-a46fb7953dd3"),
                            Address = "Address 17",
                            Name = "Cinema Center 17"
                        },
                        new
                        {
                            Id = new Guid("7de5ccef-9b29-4512-a205-85bf13fa73ce"),
                            Address = "Address 18",
                            Name = "Cinema Center 18"
                        },
                        new
                        {
                            Id = new Guid("49b69c67-94a5-4045-9493-b84c2fc5d80f"),
                            Address = "Address 19",
                            Name = "Cinema Center 19"
                        },
                        new
                        {
                            Id = new Guid("3bc02a32-f62d-46a0-81a8-157e08add944"),
                            Address = "Address 20",
                            Name = "Cinema Center 20"
                        },
                        new
                        {
                            Id = new Guid("32a88689-2f75-4c50-85af-f25356a7c251"),
                            Address = "Address 21",
                            Name = "Cinema Center 21"
                        },
                        new
                        {
                            Id = new Guid("e1e869fc-6bc4-42d3-ab6d-61eb8218205b"),
                            Address = "Address 22",
                            Name = "Cinema Center 22"
                        },
                        new
                        {
                            Id = new Guid("68a9eeb3-54ee-4377-bf8c-81391ee555f6"),
                            Address = "Address 23",
                            Name = "Cinema Center 23"
                        },
                        new
                        {
                            Id = new Guid("2bb2f9da-6860-4525-9f7d-1ad3229e9448"),
                            Address = "Address 24",
                            Name = "Cinema Center 24"
                        },
                        new
                        {
                            Id = new Guid("ecb1ed1e-6e8f-4caf-8d1c-0d156c72beb3"),
                            Address = "Address 25",
                            Name = "Cinema Center 25"
                        },
                        new
                        {
                            Id = new Guid("f2b13dc6-1655-4ef0-9238-7ef40cd1afce"),
                            Address = "Address 26",
                            Name = "Cinema Center 26"
                        },
                        new
                        {
                            Id = new Guid("f3d96dbf-ace7-4dc7-b456-1956f10b8e60"),
                            Address = "Address 27",
                            Name = "Cinema Center 27"
                        },
                        new
                        {
                            Id = new Guid("2112a655-7f46-4515-b687-1c99a6b27901"),
                            Address = "Address 28",
                            Name = "Cinema Center 28"
                        },
                        new
                        {
                            Id = new Guid("90e1bbf6-9ba6-45e8-b95d-6e3a72a14f2e"),
                            Address = "Address 29",
                            Name = "Cinema Center 29"
                        },
                        new
                        {
                            Id = new Guid("3152d009-a338-4095-acae-8b85df2f4caf"),
                            Address = "Address 30",
                            Name = "Cinema Center 30"
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.CinemaType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CinemaTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d51bee9b-54c3-4a3c-a06a-7c3940852f57"),
                            Name = "2D"
                        },
                        new
                        {
                            Id = new Guid("fbe455d5-c40e-432e-9b28-edac59f7e481"),
                            Name = "Gold Class"
                        },
                        new
                        {
                            Id = new Guid("03846649-c852-443c-9f5c-f935343318d5"),
                            Name = "Premium Class"
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Combo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Combos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebebb29e-fee5-4647-a46b-0930728d6467"),
                            Name = "Combo 1",
                            Price = 10000m
                        },
                        new
                        {
                            Id = new Guid("8df39737-1fb7-45fe-b22a-a64b24e15122"),
                            Name = "Combo 2",
                            Price = 20000m
                        },
                        new
                        {
                            Id = new Guid("67031b2c-f507-4da2-814d-e92850167951"),
                            Name = "Combo 3",
                            Price = 30000m
                        },
                        new
                        {
                            Id = new Guid("2bbf7e2d-ba51-404e-b43e-1b0147cfdc63"),
                            Name = "Combo 4",
                            Price = 40000m
                        },
                        new
                        {
                            Id = new Guid("bee4799b-cd2d-412b-b47d-3bb6732c194c"),
                            Name = "Combo 5",
                            Price = 50000m
                        },
                        new
                        {
                            Id = new Guid("3c254ddf-c43b-452b-9e72-e727b172ee53"),
                            Name = "Combo 6",
                            Price = 60000m
                        },
                        new
                        {
                            Id = new Guid("9bceb4b5-2758-463a-9c5e-13616f0f887f"),
                            Name = "Combo 7",
                            Price = 70000m
                        },
                        new
                        {
                            Id = new Guid("21efdf93-9bd0-44bc-8861-2e3b9f966e32"),
                            Name = "Combo 8",
                            Price = 80000m
                        },
                        new
                        {
                            Id = new Guid("9ace5d6a-1634-4cfe-a9e9-140d524565ac"),
                            Name = "Combo 9",
                            Price = 90000m
                        },
                        new
                        {
                            Id = new Guid("f6cd4651-1c99-4e6f-bc78-4828e0addd87"),
                            Name = "Combo 10",
                            Price = 0m
                        },
                        new
                        {
                            Id = new Guid("5f6539d7-673c-446d-ad4d-402c36395f60"),
                            Name = "Combo 11",
                            Price = 10000m
                        },
                        new
                        {
                            Id = new Guid("30929df6-2a7a-41f5-83ec-45f68071130b"),
                            Name = "Combo 12",
                            Price = 20000m
                        },
                        new
                        {
                            Id = new Guid("088988cf-b6ec-4245-abe9-ff2e0b8f7ffb"),
                            Name = "Combo 13",
                            Price = 30000m
                        },
                        new
                        {
                            Id = new Guid("cce92c61-1cf5-4229-aead-e6711b125c56"),
                            Name = "Combo 14",
                            Price = 40000m
                        },
                        new
                        {
                            Id = new Guid("1a200aba-a7e0-48e7-9358-73e4a798e14a"),
                            Name = "Combo 15",
                            Price = 50000m
                        },
                        new
                        {
                            Id = new Guid("3b9ff75b-6a83-4143-979d-6d90b9d94393"),
                            Name = "Combo 16",
                            Price = 60000m
                        },
                        new
                        {
                            Id = new Guid("c0f48e87-d9c3-47e3-8dab-51b94f86a683"),
                            Name = "Combo 17",
                            Price = 70000m
                        },
                        new
                        {
                            Id = new Guid("8d1aba48-2c7f-42c4-926d-bc8ae614ba1b"),
                            Name = "Combo 18",
                            Price = 80000m
                        },
                        new
                        {
                            Id = new Guid("4a06ead0-742b-43a7-9915-67c922163516"),
                            Name = "Combo 19",
                            Price = 90000m
                        },
                        new
                        {
                            Id = new Guid("2c343a8b-c174-463b-923a-1bc4bc2f659d"),
                            Name = "Combo 20",
                            Price = 0m
                        },
                        new
                        {
                            Id = new Guid("544746f0-9a40-4058-8850-6b0042be8bc7"),
                            Name = "Combo 21",
                            Price = 10000m
                        },
                        new
                        {
                            Id = new Guid("34f7d917-6c42-44d4-be54-e0a3a840dc62"),
                            Name = "Combo 22",
                            Price = 20000m
                        },
                        new
                        {
                            Id = new Guid("0fdd99b8-1e72-4436-9462-0e0197269a42"),
                            Name = "Combo 23",
                            Price = 30000m
                        },
                        new
                        {
                            Id = new Guid("8fbb6669-5a7f-4b5b-b069-1ec7af8060a5"),
                            Name = "Combo 24",
                            Price = 40000m
                        },
                        new
                        {
                            Id = new Guid("790a9e78-6d12-4bc6-961e-d7a072690158"),
                            Name = "Combo 25",
                            Price = 50000m
                        },
                        new
                        {
                            Id = new Guid("e914543c-7e8b-4958-9543-620c044ee3da"),
                            Name = "Combo 26",
                            Price = 60000m
                        },
                        new
                        {
                            Id = new Guid("eedaf319-8842-49d8-ba22-a3cb2a23efd1"),
                            Name = "Combo 27",
                            Price = 70000m
                        },
                        new
                        {
                            Id = new Guid("6b072710-1351-4cf4-a2c0-4eb836f148c5"),
                            Name = "Combo 28",
                            Price = 80000m
                        },
                        new
                        {
                            Id = new Guid("5c75d494-bce1-4558-b8c1-75f88afd48e2"),
                            Name = "Combo 29",
                            Price = 90000m
                        },
                        new
                        {
                            Id = new Guid("b2a0ecee-e123-4d95-8bcc-880a8fe0cfe9"),
                            Name = "Combo 30",
                            Price = 0m
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.ConfirmedEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfirmCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("ConfirmedEmails");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Film", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gerne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<int?>("RunningTime")
                        .HasColumnType("int");

                    b.Property<Guid?>("ScreenTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TranslationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bc7396d-b9fe-4fc3-9aab-b898d76ae770"),
                            Cast = "Actor 1, Actress 1",
                            CreatDate = new DateTime(2023, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 1.",
                            Director = "Director 1",
                            EnglishName = "Film 1 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 1",
                            Nation = "Japan",
                            Poster = "https://example.com/poster1.jpg",
                            Rating = 2,
                            ReleaseYear = 2023,
                            RunningTime = 61,
                            ScreenTypeId = new Guid("3fbe0151-6ec6-4d2e-a7a6-2411690ec582"),
                            StartDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer1.mp4",
                            TranslationTypeId = new Guid("66dfbbf3-e560-4b72-ac6a-1dff91b56e36")
                        },
                        new
                        {
                            Id = new Guid("b6db23c8-d97f-4168-bb32-c5965e07092b"),
                            Cast = "Actor 2, Actress 2",
                            CreatDate = new DateTime(2023, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 2.",
                            Director = "Director 2",
                            EnglishName = "Film 2 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 2",
                            Nation = "USA",
                            Poster = "https://example.com/poster2.jpg",
                            Rating = 3,
                            ReleaseYear = 2023,
                            RunningTime = 62,
                            ScreenTypeId = new Guid("4fffa79b-30b5-428e-94d3-4b58621456b4"),
                            StartDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer2.mp4",
                            TranslationTypeId = new Guid("9108b361-90c4-4f83-a348-3b1801cca181")
                        },
                        new
                        {
                            Id = new Guid("8538400a-4e0b-4ed0-b74a-3d7af46b1a7b"),
                            Cast = "Actor 3, Actress 3",
                            CreatDate = new DateTime(2023, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 3.",
                            Director = "Director 3",
                            EnglishName = "Film 3 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 3",
                            Nation = "Japan",
                            Poster = "https://example.com/poster3.jpg",
                            Rating = 4,
                            ReleaseYear = 2023,
                            RunningTime = 63,
                            ScreenTypeId = new Guid("05556965-7d6b-40f5-92ac-a5830ac52780"),
                            StartDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer3.mp4",
                            TranslationTypeId = new Guid("57438772-fb43-42cb-8e45-69e10ff58fb3")
                        },
                        new
                        {
                            Id = new Guid("01d6af29-cf54-4d5e-845e-93ddb4526f44"),
                            Cast = "Actor 4, Actress 4",
                            CreatDate = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 4.",
                            Director = "Director 4",
                            EnglishName = "Film 4 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 4",
                            Nation = "USA",
                            Poster = "https://example.com/poster4.jpg",
                            Rating = 5,
                            ReleaseYear = 2023,
                            RunningTime = 64,
                            ScreenTypeId = new Guid("e9924637-86e9-44b8-9262-6cdc840968cb"),
                            StartDate = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer4.mp4",
                            TranslationTypeId = new Guid("1eb7c1ab-ee9d-4da8-bb7f-c5128bb3fb3d")
                        },
                        new
                        {
                            Id = new Guid("93a7aac7-2d62-4e65-a7e6-23586e40c945"),
                            Cast = "Actor 5, Actress 5",
                            CreatDate = new DateTime(2023, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 5.",
                            Director = "Director 5",
                            EnglishName = "Film 5 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 5",
                            Nation = "Japan",
                            Poster = "https://example.com/poster5.jpg",
                            Rating = 1,
                            ReleaseYear = 2023,
                            RunningTime = 65,
                            ScreenTypeId = new Guid("e6d62376-be8c-4c2f-ae2a-fd259976e0b3"),
                            StartDate = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer5.mp4",
                            TranslationTypeId = new Guid("5cf7fc1e-b916-4d16-9ad3-16bd3bb3b645")
                        },
                        new
                        {
                            Id = new Guid("1166489a-5fbe-49e3-9fbf-4c3a204bca4a"),
                            Cast = "Actor 6, Actress 6",
                            CreatDate = new DateTime(2023, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 6.",
                            Director = "Director 6",
                            EnglishName = "Film 6 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 6",
                            Nation = "USA",
                            Poster = "https://example.com/poster6.jpg",
                            Rating = 2,
                            ReleaseYear = 2023,
                            RunningTime = 66,
                            ScreenTypeId = new Guid("ff34c3e3-a746-49e8-a579-3f565359b802"),
                            StartDate = new DateTime(2023, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer6.mp4",
                            TranslationTypeId = new Guid("5be40513-a685-47c5-850f-1c96eabc3130")
                        },
                        new
                        {
                            Id = new Guid("772826dd-28e9-4e51-830d-da32f7dcfd9d"),
                            Cast = "Actor 7, Actress 7",
                            CreatDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 7.",
                            Director = "Director 7",
                            EnglishName = "Film 7 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 7",
                            Nation = "Japan",
                            Poster = "https://example.com/poster7.jpg",
                            Rating = 3,
                            ReleaseYear = 2023,
                            RunningTime = 67,
                            ScreenTypeId = new Guid("8c65186d-2eef-41f4-b471-bdc043c2ecfe"),
                            StartDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer7.mp4",
                            TranslationTypeId = new Guid("17fc1ddf-a809-4f1d-a190-963d4123257d")
                        },
                        new
                        {
                            Id = new Guid("f4cb9921-f54e-4704-84ce-4bb2e1545614"),
                            Cast = "Actor 8, Actress 8",
                            CreatDate = new DateTime(2023, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 8.",
                            Director = "Director 8",
                            EnglishName = "Film 8 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 8",
                            Nation = "USA",
                            Poster = "https://example.com/poster8.jpg",
                            Rating = 4,
                            ReleaseYear = 2023,
                            RunningTime = 68,
                            ScreenTypeId = new Guid("ebd6924b-3163-4b7f-a15f-38d5f9ac55d7"),
                            StartDate = new DateTime(2023, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer8.mp4",
                            TranslationTypeId = new Guid("4d103c06-6c50-4b15-82f3-aa7ec64c0a0a")
                        },
                        new
                        {
                            Id = new Guid("3c502e3e-ce7f-44c3-a8b1-fcf220aac39c"),
                            Cast = "Actor 9, Actress 9",
                            CreatDate = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 9.",
                            Director = "Director 9",
                            EnglishName = "Film 9 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 9",
                            Nation = "Japan",
                            Poster = "https://example.com/poster9.jpg",
                            Rating = 5,
                            ReleaseYear = 2023,
                            RunningTime = 69,
                            ScreenTypeId = new Guid("180624ee-8715-4534-8b84-6737c1878027"),
                            StartDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer9.mp4",
                            TranslationTypeId = new Guid("12ca5f66-c138-4517-bcae-768a338e5d48")
                        },
                        new
                        {
                            Id = new Guid("1bcbe966-9cde-40fa-80f5-eeae4fab933d"),
                            Cast = "Actor 10, Actress 10",
                            CreatDate = new DateTime(2023, 8, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 10.",
                            Director = "Director 10",
                            EnglishName = "Film 10 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 10",
                            Nation = "USA",
                            Poster = "https://example.com/poster10.jpg",
                            Rating = 1,
                            ReleaseYear = 2023,
                            RunningTime = 70,
                            ScreenTypeId = new Guid("09646681-0cd4-401b-9c7f-4339b8583740"),
                            StartDate = new DateTime(2023, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer10.mp4",
                            TranslationTypeId = new Guid("d44eda70-95c7-4c38-98c0-d3a3a5bb8633")
                        },
                        new
                        {
                            Id = new Guid("a5b7920e-c2ba-48d4-9219-3d197fbeca64"),
                            Cast = "Actor 11, Actress 11",
                            CreatDate = new DateTime(2023, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 11.",
                            Director = "Director 11",
                            EnglishName = "Film 11 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 11",
                            Nation = "Japan",
                            Poster = "https://example.com/poster11.jpg",
                            Rating = 2,
                            ReleaseYear = 2023,
                            RunningTime = 71,
                            ScreenTypeId = new Guid("55dd4184-1032-41d4-9fa1-762838d1c47d"),
                            StartDate = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer11.mp4",
                            TranslationTypeId = new Guid("7b6f1526-53fc-4dc9-b1af-638dd8c83970")
                        },
                        new
                        {
                            Id = new Guid("27cca5be-5877-4080-ae4a-54e38b8c6c76"),
                            Cast = "Actor 12, Actress 12",
                            CreatDate = new DateTime(2023, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 12.",
                            Director = "Director 12",
                            EnglishName = "Film 12 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 12",
                            Nation = "USA",
                            Poster = "https://example.com/poster12.jpg",
                            Rating = 3,
                            ReleaseYear = 2023,
                            RunningTime = 72,
                            ScreenTypeId = new Guid("c01ffdad-155d-4119-a24d-2da04d65adf4"),
                            StartDate = new DateTime(2023, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer12.mp4",
                            TranslationTypeId = new Guid("44cc43b1-b104-4f3d-a4f5-6e4b1fe0a37a")
                        },
                        new
                        {
                            Id = new Guid("70d320f7-144e-4a6d-92eb-35ad7ccbec65"),
                            Cast = "Actor 13, Actress 13",
                            CreatDate = new DateTime(2023, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 13.",
                            Director = "Director 13",
                            EnglishName = "Film 13 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 13",
                            Nation = "Japan",
                            Poster = "https://example.com/poster13.jpg",
                            Rating = 4,
                            ReleaseYear = 2023,
                            RunningTime = 73,
                            ScreenTypeId = new Guid("40224269-48fc-4a4d-9af0-bcd401fcb1d8"),
                            StartDate = new DateTime(2023, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer13.mp4",
                            TranslationTypeId = new Guid("cd875614-9450-4370-acf4-b3db94928828")
                        },
                        new
                        {
                            Id = new Guid("d7b0c1ed-71bc-47ca-a8d8-2a3e9774dd91"),
                            Cast = "Actor 14, Actress 14",
                            CreatDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 14.",
                            Director = "Director 14",
                            EnglishName = "Film 14 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 14",
                            Nation = "USA",
                            Poster = "https://example.com/poster14.jpg",
                            Rating = 5,
                            ReleaseYear = 2023,
                            RunningTime = 74,
                            ScreenTypeId = new Guid("91868aa7-2f5b-42aa-933c-67fcc8b1de20"),
                            StartDate = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer14.mp4",
                            TranslationTypeId = new Guid("6f5bf879-fb61-4ab2-9be2-eab1740ae54e")
                        },
                        new
                        {
                            Id = new Guid("561d44c7-9bcb-452c-ab06-4514317fba27"),
                            Cast = "Actor 15, Actress 15",
                            CreatDate = new DateTime(2023, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 15.",
                            Director = "Director 15",
                            EnglishName = "Film 15 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 15",
                            Nation = "Japan",
                            Poster = "https://example.com/poster15.jpg",
                            Rating = 1,
                            ReleaseYear = 2023,
                            RunningTime = 75,
                            ScreenTypeId = new Guid("d1e8eeb6-b39d-45a2-99ab-68051c078cd5"),
                            StartDate = new DateTime(2023, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer15.mp4",
                            TranslationTypeId = new Guid("41c36072-2b19-4d8e-b266-47f97a0d73e3")
                        },
                        new
                        {
                            Id = new Guid("bf21c2c7-c31a-4ca0-aa01-a1be9cb005bc"),
                            Cast = "Actor 16, Actress 16",
                            CreatDate = new DateTime(2023, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 16.",
                            Director = "Director 16",
                            EnglishName = "Film 16 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 16",
                            Nation = "USA",
                            Poster = "https://example.com/poster16.jpg",
                            Rating = 2,
                            ReleaseYear = 2023,
                            RunningTime = 76,
                            ScreenTypeId = new Guid("10f2c659-3dd3-4e5a-afe9-ac041b89518e"),
                            StartDate = new DateTime(2023, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer16.mp4",
                            TranslationTypeId = new Guid("bc38aeeb-6d93-450a-9845-4edb9a30d09d")
                        },
                        new
                        {
                            Id = new Guid("998c6674-08ae-48d8-b12d-d80e30e7eab5"),
                            Cast = "Actor 17, Actress 17",
                            CreatDate = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 17.",
                            Director = "Director 17",
                            EnglishName = "Film 17 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 17",
                            Nation = "Japan",
                            Poster = "https://example.com/poster17.jpg",
                            Rating = 3,
                            ReleaseYear = 2023,
                            RunningTime = 77,
                            ScreenTypeId = new Guid("64a38f73-0971-461d-bcd0-00157f7fc165"),
                            StartDate = new DateTime(2023, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer17.mp4",
                            TranslationTypeId = new Guid("44b41173-aa35-456a-a354-e5fc80e32067")
                        },
                        new
                        {
                            Id = new Guid("7b2de053-33f0-4c08-9965-14eef2f63d9f"),
                            Cast = "Actor 18, Actress 18",
                            CreatDate = new DateTime(2023, 8, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 18.",
                            Director = "Director 18",
                            EnglishName = "Film 18 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 18",
                            Nation = "USA",
                            Poster = "https://example.com/poster18.jpg",
                            Rating = 4,
                            ReleaseYear = 2023,
                            RunningTime = 78,
                            ScreenTypeId = new Guid("0f5113de-be54-4608-a273-0cd491e482b5"),
                            StartDate = new DateTime(2023, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer18.mp4",
                            TranslationTypeId = new Guid("8b08497a-9300-4f02-9efc-a8029ceb4248")
                        },
                        new
                        {
                            Id = new Guid("b44b3960-2a35-475d-83f8-48b65e439f27"),
                            Cast = "Actor 19, Actress 19",
                            CreatDate = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 19.",
                            Director = "Director 19",
                            EnglishName = "Film 19 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 19",
                            Nation = "Japan",
                            Poster = "https://example.com/poster19.jpg",
                            Rating = 5,
                            ReleaseYear = 2023,
                            RunningTime = 79,
                            ScreenTypeId = new Guid("98b84dc9-add8-45c2-be3e-0bbe2a73cefe"),
                            StartDate = new DateTime(2023, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer19.mp4",
                            TranslationTypeId = new Guid("a4d82559-d3ba-4a5d-b467-34f3627da792")
                        },
                        new
                        {
                            Id = new Guid("573371ac-a44f-4604-9990-d4c9fe521258"),
                            Cast = "Actor 20, Actress 20",
                            CreatDate = new DateTime(2023, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 20.",
                            Director = "Director 20",
                            EnglishName = "Film 20 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 20",
                            Nation = "USA",
                            Poster = "https://example.com/poster20.jpg",
                            Rating = 1,
                            ReleaseYear = 2023,
                            RunningTime = 80,
                            ScreenTypeId = new Guid("3d728362-c486-463b-ab4f-25a4e07793e0"),
                            StartDate = new DateTime(2023, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer20.mp4",
                            TranslationTypeId = new Guid("d62fc42e-2ec8-489d-adfc-c897a23e3cfa")
                        },
                        new
                        {
                            Id = new Guid("63505aac-cc03-4a4c-982f-f981c88a65b8"),
                            Cast = "Actor 21, Actress 21",
                            CreatDate = new DateTime(2023, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 21.",
                            Director = "Director 21",
                            EnglishName = "Film 21 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 21",
                            Nation = "Japan",
                            Poster = "https://example.com/poster21.jpg",
                            Rating = 2,
                            ReleaseYear = 2023,
                            RunningTime = 81,
                            ScreenTypeId = new Guid("7d31c372-9493-401b-ba72-f4aef8f5c693"),
                            StartDate = new DateTime(2023, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer21.mp4",
                            TranslationTypeId = new Guid("c8bbd820-0467-49d5-ac1f-7aa21e204554")
                        },
                        new
                        {
                            Id = new Guid("5f67798c-5734-428d-bafe-fc6b63ae838d"),
                            Cast = "Actor 22, Actress 22",
                            CreatDate = new DateTime(2023, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 22.",
                            Director = "Director 22",
                            EnglishName = "Film 22 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 22",
                            Nation = "USA",
                            Poster = "https://example.com/poster22.jpg",
                            Rating = 3,
                            ReleaseYear = 2023,
                            RunningTime = 82,
                            ScreenTypeId = new Guid("6cb1e874-eca6-44c2-8080-bd4b34b6897c"),
                            StartDate = new DateTime(2023, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer22.mp4",
                            TranslationTypeId = new Guid("1fe046f0-88c0-4a49-aa84-47246ffad032")
                        },
                        new
                        {
                            Id = new Guid("317985b1-45ee-42f2-9106-5752c629f320"),
                            Cast = "Actor 23, Actress 23",
                            CreatDate = new DateTime(2023, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 23.",
                            Director = "Director 23",
                            EnglishName = "Film 23 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 23",
                            Nation = "Japan",
                            Poster = "https://example.com/poster23.jpg",
                            Rating = 4,
                            ReleaseYear = 2023,
                            RunningTime = 83,
                            ScreenTypeId = new Guid("9efa2c89-e223-4b97-b7f7-a2b5a118f130"),
                            StartDate = new DateTime(2023, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer23.mp4",
                            TranslationTypeId = new Guid("d0d00b36-279b-44a4-8bd0-667f5e2a72e7")
                        },
                        new
                        {
                            Id = new Guid("7a2f6d54-171e-4575-8462-b33a1f05ddca"),
                            Cast = "Actor 24, Actress 24",
                            CreatDate = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 24.",
                            Director = "Director 24",
                            EnglishName = "Film 24 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 24",
                            Nation = "USA",
                            Poster = "https://example.com/poster24.jpg",
                            Rating = 5,
                            ReleaseYear = 2023,
                            RunningTime = 84,
                            ScreenTypeId = new Guid("70f514c6-f25d-4448-bbc5-87f65b3ed86b"),
                            StartDate = new DateTime(2023, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer24.mp4",
                            TranslationTypeId = new Guid("5ef47842-0594-4197-88f8-df476a7747b8")
                        },
                        new
                        {
                            Id = new Guid("ad0f8872-76b0-4f5e-8e56-8cd54b90158c"),
                            Cast = "Actor 25, Actress 25",
                            CreatDate = new DateTime(2023, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 25.",
                            Director = "Director 25",
                            EnglishName = "Film 25 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 25",
                            Nation = "Japan",
                            Poster = "https://example.com/poster25.jpg",
                            Rating = 1,
                            ReleaseYear = 2023,
                            RunningTime = 85,
                            ScreenTypeId = new Guid("8ba6bf76-b776-4176-b26a-57b1dc1db611"),
                            StartDate = new DateTime(2023, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer25.mp4",
                            TranslationTypeId = new Guid("d3c70169-45aa-40be-9c74-0fe7c5b9a1f9")
                        },
                        new
                        {
                            Id = new Guid("85e50379-ed53-417e-8c62-69609d960a67"),
                            Cast = "Actor 26, Actress 26",
                            CreatDate = new DateTime(2023, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 26.",
                            Director = "Director 26",
                            EnglishName = "Film 26 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 26",
                            Nation = "USA",
                            Poster = "https://example.com/poster26.jpg",
                            Rating = 2,
                            ReleaseYear = 2023,
                            RunningTime = 86,
                            ScreenTypeId = new Guid("97fdf6fc-fcdb-4a10-8d6a-c991642b9985"),
                            StartDate = new DateTime(2023, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer26.mp4",
                            TranslationTypeId = new Guid("beea6bb3-24d1-4252-b576-286026c1c667")
                        },
                        new
                        {
                            Id = new Guid("ac65c304-52e2-4322-a039-ca900f7fc5ac"),
                            Cast = "Actor 27, Actress 27",
                            CreatDate = new DateTime(2023, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 27.",
                            Director = "Director 27",
                            EnglishName = "Film 27 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 27",
                            Nation = "Japan",
                            Poster = "https://example.com/poster27.jpg",
                            Rating = 3,
                            ReleaseYear = 2023,
                            RunningTime = 87,
                            ScreenTypeId = new Guid("40c20521-d1c4-4a01-a1ba-d14123010417"),
                            StartDate = new DateTime(2023, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer27.mp4",
                            TranslationTypeId = new Guid("5fd8795a-e172-414d-aa7d-5d010f159caf")
                        },
                        new
                        {
                            Id = new Guid("356e3087-6890-4b86-a37f-cecea4782394"),
                            Cast = "Actor 28, Actress 28",
                            CreatDate = new DateTime(2023, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 28.",
                            Director = "Director 28",
                            EnglishName = "Film 28 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 28",
                            Nation = "USA",
                            Poster = "https://example.com/poster28.jpg",
                            Rating = 4,
                            ReleaseYear = 2023,
                            RunningTime = 88,
                            ScreenTypeId = new Guid("9aef9370-b012-4f21-82ee-b2faebf6c2b7"),
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer28.mp4",
                            TranslationTypeId = new Guid("25793511-3292-481b-b78d-c08d13dcaafd")
                        },
                        new
                        {
                            Id = new Guid("e6bdc7de-c231-4e8a-9906-791d938197c5"),
                            Cast = "Actor 29, Actress 29",
                            CreatDate = new DateTime(2023, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 29.",
                            Director = "Director 29",
                            EnglishName = "Film 29 (English)",
                            Gerne = "Comedy",
                            Language = "Japanese",
                            Name = "Film 29",
                            Nation = "Japan",
                            Poster = "https://example.com/poster29.jpg",
                            Rating = 5,
                            ReleaseYear = 2023,
                            RunningTime = 89,
                            ScreenTypeId = new Guid("a8bdeb39-a5a5-4f8a-a4eb-e86a395bd5c0"),
                            StartDate = new DateTime(2023, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer29.mp4",
                            TranslationTypeId = new Guid("8fe3e2e0-312d-4096-8523-54ddfea661c2")
                        },
                        new
                        {
                            Id = new Guid("cccf57e9-60e0-49aa-983a-ae48ac580a95"),
                            Cast = "Actor 30, Actress 30",
                            CreatDate = new DateTime(2023, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "This is a description for Film 30.",
                            Director = "Director 30",
                            EnglishName = "Film 30 (English)",
                            Gerne = "Action",
                            Language = "English",
                            Name = "Film 30",
                            Nation = "USA",
                            Poster = "https://example.com/poster30.jpg",
                            Rating = 1,
                            ReleaseYear = 2023,
                            RunningTime = 90,
                            ScreenTypeId = new Guid("7ea79f7b-2705-47ec-97cd-1edda31cbedc"),
                            StartDate = new DateTime(2023, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Trailer = "https://example.com/trailer30.mp4",
                            TranslationTypeId = new Guid("84520b4e-9ea5-49a0-b749-501f728779c7")
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.FilmScreenType", b =>
                {
                    b.Property<Guid>("ScreenTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ScreenTypeId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("FilmScreenTypes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.FilmTranslationType", b =>
                {
                    b.Property<Guid>("TranslationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FilmId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TranslationTypeId", "FilmId");

                    b.HasIndex("FilmId");

                    b.ToTable("FilmTranslationTypes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Membership", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Memberships");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fd36705c-0610-4c30-9cfb-e5827b3f3d78"),
                            Point = 0,
                            Status = 1
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("177ea60e-03db-40ae-bccb-d323d63a5396"),
                            Title = "Title 1"
                        },
                        new
                        {
                            Id = new Guid("369e3e61-ba75-4348-8f3f-2fe272963103"),
                            Title = "Title 2"
                        },
                        new
                        {
                            Id = new Guid("d706ab90-35fc-4a6b-9976-411cc1ac902d"),
                            Title = "Title 3"
                        },
                        new
                        {
                            Id = new Guid("f6971419-5fb3-4ce3-b6bd-b43051272841"),
                            Title = "Title 4"
                        },
                        new
                        {
                            Id = new Guid("669e9a7c-0dee-47cf-8844-794597d0c98c"),
                            Title = "Title 5"
                        },
                        new
                        {
                            Id = new Guid("d520a495-05a6-4576-a731-73304b1a6ec0"),
                            Title = "Title 6"
                        },
                        new
                        {
                            Id = new Guid("8303d7d6-3947-4cfe-b28c-86a3d8fdfda0"),
                            Title = "Title 7"
                        },
                        new
                        {
                            Id = new Guid("d01e518c-3b6b-4a65-8c53-ec8175cdb914"),
                            Title = "Title 8"
                        },
                        new
                        {
                            Id = new Guid("68b7429a-2fe6-4092-9cb2-89446425b027"),
                            Title = "Title 9"
                        },
                        new
                        {
                            Id = new Guid("c5fab55e-da56-4e66-b2fe-593647c4f752"),
                            Title = "Title 10"
                        },
                        new
                        {
                            Id = new Guid("b41d981c-1b4b-4994-9a39-3024ef0b67d5"),
                            Title = "Title 11"
                        },
                        new
                        {
                            Id = new Guid("04fc64ce-cd59-4c83-bb03-44d3a84e9ff1"),
                            Title = "Title 12"
                        },
                        new
                        {
                            Id = new Guid("e9f38131-abf3-4679-8433-c33a6f03e48b"),
                            Title = "Title 13"
                        },
                        new
                        {
                            Id = new Guid("7baea9d3-82d1-46ee-9e47-ae5285cf7ac7"),
                            Title = "Title 14"
                        },
                        new
                        {
                            Id = new Guid("c308fa76-926f-4e49-8aa7-b7f5f7fd3fd7"),
                            Title = "Title 15"
                        },
                        new
                        {
                            Id = new Guid("de7831a8-4f4a-4d30-a0b9-d19503b3dba9"),
                            Title = "Title 16"
                        },
                        new
                        {
                            Id = new Guid("007cda58-f9db-4b3f-afd8-0cd11569ea12"),
                            Title = "Title 17"
                        },
                        new
                        {
                            Id = new Guid("b90a5f81-a42d-42f5-a17a-c082a3dffb7e"),
                            Title = "Title 18"
                        },
                        new
                        {
                            Id = new Guid("6eb1f5d5-2e67-4a1f-b9a7-65577c15e8a0"),
                            Title = "Title 19"
                        },
                        new
                        {
                            Id = new Guid("b9870221-7553-4d26-8deb-1af32bf12afd"),
                            Title = "Title 20"
                        },
                        new
                        {
                            Id = new Guid("59186df5-dcb9-4dfd-9e79-9110efc9a5bd"),
                            Title = "Title 21"
                        },
                        new
                        {
                            Id = new Guid("c7831439-c1b0-4806-bedc-5810ff0759b4"),
                            Title = "Title 22"
                        },
                        new
                        {
                            Id = new Guid("a0a7a589-a7bf-4411-8492-a22adf430aeb"),
                            Title = "Title 23"
                        },
                        new
                        {
                            Id = new Guid("4ad952d8-4287-4d9d-ba71-44129dbda3e8"),
                            Title = "Title 24"
                        },
                        new
                        {
                            Id = new Guid("37d0ea2d-2a48-4b9e-a8f2-4500a9f26a60"),
                            Title = "Title 25"
                        },
                        new
                        {
                            Id = new Guid("9059ce84-93a5-4153-a4c4-4fe9c6925b1f"),
                            Title = "Title 26"
                        },
                        new
                        {
                            Id = new Guid("02c0ceda-f2a0-4046-a69e-af697b62b960"),
                            Title = "Title 27"
                        },
                        new
                        {
                            Id = new Guid("486e8a4c-e82d-45d6-8ba1-f995ef0c34a7"),
                            Title = "Title 28"
                        },
                        new
                        {
                            Id = new Guid("55fa3809-f071-4765-a383-6c62e9809443"),
                            Title = "Title 29"
                        },
                        new
                        {
                            Id = new Guid("f3050358-a9cc-4aa7-818c-de9d4df8fa35"),
                            Title = "Title 30"
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.PromotionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PromotionId");

                    b.ToTable("PromotionDetails");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Schedule", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.ScreenType", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScreenTypes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Seat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<Guid?>("SeatTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("SeatTypeId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.SeatType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SeatTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e548fd61-3d84-4104-b15e-f13d5d7d53ed"),
                            Name = "Normal"
                        },
                        new
                        {
                            Id = new Guid("d997b27a-ddb7-4ad1-a1cd-c2bd00c50cb9"),
                            Name = "VIP"
                        },
                        new
                        {
                            Id = new Guid("428edc6b-0862-4623-b038-ac505fd554bc"),
                            Name = "Couple"
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.ShowTime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FilmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ScreenTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TranslationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CinemaCenterId");

                    b.HasIndex("CinemaId");

                    b.HasIndex("FilmId");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("ScreenTypeId")
                        .IsUnique()
                        .HasFilter("[ScreenTypeId] IS NOT NULL");

                    b.HasIndex("TranslationTypeId")
                        .IsUnique()
                        .HasFilter("[TranslationTypeId] IS NOT NULL");

                    b.ToTable("ShowTimes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qrcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SeatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShowTimeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<Guid?>("TicketPriceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("CinemaCenterId");

                    b.HasIndex("SeatId");

                    b.HasIndex("ShowTimeId");

                    b.HasIndex("TicketPriceId")
                        .IsUnique()
                        .HasFilter("[TicketPriceId] IS NOT NULL");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.TicketPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CinemaTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("ScreenTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ScreeningDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SeatTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CinemaTypeId");

                    b.HasIndex("ScreenTypeId");

                    b.HasIndex("ScreeningDayId");

                    b.HasIndex("SeatTypeId");

                    b.ToTable("TicketPrices");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.TranslationType", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TranslationTypes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.VoucherDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VoucherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherDetails");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entitis.ScreeningDay", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScreeningDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d51bee9b-54c3-4a3c-a06a-7c3940852f57"),
                            Day = "T2-CN"
                        },
                        new
                        {
                            Id = new Guid("7136ed84-69f4-46dc-a784-857bb2c91c42"),
                            Day = "T2-T6"
                        },
                        new
                        {
                            Id = new Guid("e4f8f494-4e25-4966-806a-7b8843d79b6b"),
                            Day = "T7-CN"
                        });
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Bill", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Membership", "Membership")
                        .WithMany("Bills")
                        .HasForeignKey("MembershipId");

                    b.HasOne("MovieTicket.Domain.Entities.Voucher", "Voucher")
                        .WithMany("Bills")
                        .HasForeignKey("VoucherId");

                    b.Navigation("Membership");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.BillCombo", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Bill", "Bill")
                        .WithMany("BillCombos")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieTicket.Domain.Entities.Combo", "Combo")
                        .WithMany("BillCombos")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.BillSeat", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Bill", "Bill")
                        .WithMany("BillSeats")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieTicket.Domain.Entities.Seat", "Seat")
                        .WithMany("BillSeats")
                        .HasForeignKey("SeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Cinema", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.CinemaCenter", "CinemaCenter")
                        .WithMany("Cinemas")
                        .HasForeignKey("CinemaCenterId");

                    b.HasOne("MovieTicket.Domain.Entities.CinemaType", "CinemaType")
                        .WithOne("Cinema")
                        .HasForeignKey("MovieTicket.Domain.Entities.Cinema", "CinemaTypeId");

                    b.Navigation("CinemaCenter");

                    b.Navigation("CinemaType");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.ConfirmedEmail", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Account", "Account")
                        .WithMany("ConfirmedEmails")
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.FilmScreenType", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Film", "Film")
                        .WithMany("FilmScreenTypes")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieTicket.Domain.Entities.ScreenType", "ScreenType")
                        .WithMany("FilmScreenTypes")
                        .HasForeignKey("ScreenTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("ScreenType");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.FilmTranslationType", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Film", "Film")
                        .WithMany("FilmTranslationTypes")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieTicket.Domain.Entities.TranslationType", "TranslationType")
                        .WithMany("FilmTranslationTypes")
                        .HasForeignKey("TranslationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("TranslationType");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Membership", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Account", "Account")
                        .WithOne("Membership")
                        .HasForeignKey("MovieTicket.Domain.Entities.Membership", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.PromotionDetail", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Promotion", "Promotion")
                        .WithMany("PromotionDetails")
                        .HasForeignKey("PromotionId");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Account", "Account")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Schedule", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Film", "Film")
                        .WithMany("Schedules")
                        .HasForeignKey("FilmId");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Seat", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Cinema", "Cinema")
                        .WithMany("Seats")
                        .HasForeignKey("CinemaId");

                    b.HasOne("MovieTicket.Domain.Entities.SeatType", "SeatType")
                        .WithMany("Seats")
                        .HasForeignKey("SeatTypeId");

                    b.Navigation("Cinema");

                    b.Navigation("SeatType");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.ShowTime", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.CinemaCenter", "CinemaCenter")
                        .WithMany("ShowTimes")
                        .HasForeignKey("CinemaCenterId");

                    b.HasOne("MovieTicket.Domain.Entities.Cinema", "Cinema")
                        .WithMany("ShowTimes")
                        .HasForeignKey("CinemaId");

                    b.HasOne("MovieTicket.Domain.Entities.Film", "Film")
                        .WithMany("ShowTimes")
                        .HasForeignKey("FilmId");

                    b.HasOne("MovieTicket.Domain.Entities.Schedule", "Schedule")
                        .WithMany("ShowTimes")
                        .HasForeignKey("ScheduleId");

                    b.HasOne("MovieTicket.Domain.Entities.ScreenType", "ScreenType")
                        .WithOne("ShowTime")
                        .HasForeignKey("MovieTicket.Domain.Entities.ShowTime", "ScreenTypeId");

                    b.HasOne("MovieTicket.Domain.Entities.TranslationType", "TranslationType")
                        .WithOne("ShowTime")
                        .HasForeignKey("MovieTicket.Domain.Entities.ShowTime", "TranslationTypeId");

                    b.Navigation("Cinema");

                    b.Navigation("CinemaCenter");

                    b.Navigation("Film");

                    b.Navigation("Schedule");

                    b.Navigation("ScreenType");

                    b.Navigation("TranslationType");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Ticket", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Bill", "Bill")
                        .WithMany("Tickets")
                        .HasForeignKey("BillId");

                    b.HasOne("MovieTicket.Domain.Entities.CinemaCenter", "CinemaCenter")
                        .WithMany("Tickets")
                        .HasForeignKey("CinemaCenterId");

                    b.HasOne("MovieTicket.Domain.Entities.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatId");

                    b.HasOne("MovieTicket.Domain.Entities.ShowTime", "ShowTime")
                        .WithMany("Tickets")
                        .HasForeignKey("ShowTimeId");

                    b.HasOne("MovieTicket.Domain.Entities.TicketPrice", "TicketPrice")
                        .WithOne("Ticket")
                        .HasForeignKey("MovieTicket.Domain.Entities.Ticket", "TicketPriceId");

                    b.Navigation("Bill");

                    b.Navigation("CinemaCenter");

                    b.Navigation("Seat");

                    b.Navigation("ShowTime");

                    b.Navigation("TicketPrice");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.TicketPrice", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.CinemaType", "CinemaTypes")
                        .WithMany("TicketPrices")
                        .HasForeignKey("CinemaTypeId");

                    b.HasOne("MovieTicket.Domain.Entities.ScreenType", "ScreenType")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ScreenTypeId");

                    b.HasOne("MovieTicket.Domain.Entitis.ScreeningDay", "ScreeningDay")
                        .WithMany("TicketPrices")
                        .HasForeignKey("ScreeningDayId");

                    b.HasOne("MovieTicket.Domain.Entities.SeatType", "SeatType")
                        .WithMany("TicketPrices")
                        .HasForeignKey("SeatTypeId");

                    b.Navigation("CinemaTypes");

                    b.Navigation("ScreenType");

                    b.Navigation("ScreeningDay");

                    b.Navigation("SeatType");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.VoucherDetail", b =>
                {
                    b.HasOne("MovieTicket.Domain.Entities.Voucher", "Voucher")
                        .WithMany("VoucherDetails")
                        .HasForeignKey("VoucherId");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Account", b =>
                {
                    b.Navigation("ConfirmedEmails");

                    b.Navigation("Membership");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Bill", b =>
                {
                    b.Navigation("BillCombos");

                    b.Navigation("BillSeats");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Cinema", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("ShowTimes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.CinemaCenter", b =>
                {
                    b.Navigation("Cinemas");

                    b.Navigation("ShowTimes");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.CinemaType", b =>
                {
                    b.Navigation("Cinema");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Combo", b =>
                {
                    b.Navigation("BillCombos");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Film", b =>
                {
                    b.Navigation("FilmScreenTypes");

                    b.Navigation("FilmTranslationTypes");

                    b.Navigation("Schedules");

                    b.Navigation("ShowTimes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Membership", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Promotion", b =>
                {
                    b.Navigation("PromotionDetails");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Schedule", b =>
                {
                    b.Navigation("ShowTimes");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.ScreenType", b =>
                {
                    b.Navigation("FilmScreenTypes");

                    b.Navigation("ShowTime");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Seat", b =>
                {
                    b.Navigation("BillSeats");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.SeatType", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("TicketPrices");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.ShowTime", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.TicketPrice", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.TranslationType", b =>
                {
                    b.Navigation("FilmTranslationTypes");

                    b.Navigation("ShowTime");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entities.Voucher", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("VoucherDetails");
                });

            modelBuilder.Entity("MovieTicket.Domain.Entitis.ScreeningDay", b =>
                {
                    b.Navigation("TicketPrices");
                });
#pragma warning restore 612, 618
        }
    }
}
