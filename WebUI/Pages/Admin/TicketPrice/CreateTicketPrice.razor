@page "/create-ticket-price"
@using MovieTicket.Application.DataTransferObjs.CinemaType
@using MovieTicket.Application.DataTransferObjs.ScreenType
@using MovieTicket.Application.DataTransferObjs.ScreeningDay
@using MovieTicket.Application.DataTransferObjs.SeatType
@using MovieTicket.Application.DataTransferObjs.TicketPrice
@using WebUI.Helper
@inject ITicketPriceService _serTicketPrice;
@inject IScreeningDayService _serScreeningDay;
@inject IScreenTypeServices _serScreenType;
@inject ICinemaTypeService _serCinemaType;
@inject ISeatTypeService _serSeatType;
@inject IJSRuntime _IJSRuntime;
<EditForm Model="request" OnValidSubmit="HandleCreateAsync">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-3">
		<label for="seatType" class="form-label">Loại ghế <span class="text-danger">*</span></label>
		<select class="form-select" id="seatType" @bind="request.SeatTypeId">
			<option value="@Guid.Empty" selected>--Chọn loại ghế--</option>
			@foreach (var item in seatType)
			{
				<option value="@item.Id">@item.Name</option>
			}
		</select>
	
	</div>
	<div class="mb-3">
		<label for="graphicsType" class="form-label">Hình thức chiếu <span class="text-danger">*</span></label>
		<select class="form-select" id="screenType" @bind="request.ScreenTypeId">
			<option value="@Guid.Empty" selected>--Chọn hình thức chiếu--</option>
			@foreach (var item in screenType)
			{
				<option value="@item.Id">@item.Type</option>
			}
		</select>
	</div>
	@*  <div class="mb-3">
	<label for="screeningTimeType" class="form-label">Loại suất chiếu <span class="text-danger">*</span></label>
	<select class="form-select" id="screeningTimeType" required>
	<option selected disabled>Select a screening time type</option>
	<option value="early">Suất chiếu sớm</option>
	<option value="late">Suất chiếu muộn</option>
	</select>
	</div> *@
	<div class="mb-3">
		<label for="dayType" class="form-label">Loại ngày <span class="text-danger">*</span></label>
		<select class="form-select" id="dayType" required @bind="request.ScreeningDayId">
			<option value="@Guid.Empty" selected>--Chọn ngày chiếu--</option>
			@foreach (var item in screeningDay)
			{
				<option value="@item.Id">@item.Day</option>
			}
		</select>
	
	</div>
	<div class="mb-3">
		<label for="auditoriumType" class="form-label">Loại phòng chiếu <span class="text-danger">*</span></label>
		<select class="form-select" id="cinemaType" required @bind="request.CinemaTypeId">
			<option value="@Guid.Empty" selected>--Chọn loại phòng chiếu--</option>
			@foreach (var item in cinemaType)
			{
				<option value="@item.Id">@item.Name</option>
			}
		</select>
	
	</div>
	<div class="mb-3">
		<label for="ticketPrice" class="form-label">Giá tiền <span class="text-danger">*</span></label>
		<input type="number" class="form-control" id="ticketPrice" placeholder="Nhập giá vé" @bind="request.Price" required>
	
	</div>
	<div class="modal-footer form-check">
		<button type="submit" class="btn btn-primary">Lưu</button>
	</div>
</EditForm>


@code {
	private List<ScreeningDayDto> screeningDay = new List<ScreeningDayDto>();
	private List<ScreenTypeDto> screenType = new List<ScreenTypeDto>();
	private List<CinemaTypeDto> cinemaType = new List<CinemaTypeDto>();
	private List<SeatTypeDto> seatType = new List<SeatTypeDto>();
	private TicketPriceCreateRequest request = new TicketPriceCreateRequest();

	protected override async Task OnInitializedAsync()
	{
		request.Price = 30000;
		screeningDay = await _serScreeningDay.GetListScreeningDaysAsync();
		screenType = await _serScreenType.GetAllScreenTypes();
		cinemaType = await _serCinemaType.GetListCinemaTypesAsync();
		seatType = await _serSeatType.GetListSeatTypesAsync();
	}

	private async Task HandleCreateAsync()
	{
		var result = await _serTicketPrice.Create(request);
		if (result.Status == 200)
		{
			await _IJSRuntime.ToastrSuccess(result.Message);
			await Task.Delay(100);
			NavigationManager.NavigateTo("/ticket-price", true);
		}
		else
		{
			await _IJSRuntime.ToastrError(result.Message);
		}

	}
}
