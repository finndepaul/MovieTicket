@page "/revenue-by-cinema"
@attribute [Authorize(Roles ="Admin")]
@using MovieTicket.Application.DataTransferObjs.AdminHome
@using MovieTicket.BlazorServer.Services.Interfaces
@inject IAdminHomeService _ser;

<div class="content">
    <div class="d-flex align-items-center">
        <div class="d-flex align-items-center mr-15">
            <label for="start" class="mr-2 mb-0">Từ ngày:</label>
            <input type="date" id="start" name="start-date" @bind="@startDate" class="form-control form-control-sm" style="width: 150px;">
        </div>

        <div class="d-flex align-items-center mr-15">
            <label for="end" class="mr-2 mb-0">Đến ngày:</label>
            <input type="date" id="end" name="end-date" @bind="@endDate" class="form-control form-control-sm" style="width: 150px;">
        </div>

        <div class="d-flex align-items-center">
            <button class="btn btn-primary btn-sm w-auto mr-15" @onclick="Reload">Load dữ liệu</button>
            <button class="btn btn-success btn-sm w-auto">Xuất báo cáo</button>
        </div>
    </div>

    <br />

    <div class="row">
        <div class="col-md-6">
            <div class="chart-container">
                <p class="text-center">Số vé bán ra theo rạp</p>
                <canvas id="ticketChart"></canvas>
            </div>
        </div>
        <div class="col-md-6">
            <div class="chart-container">
                <p class="text-center">Doanh thu theo rạp</p>
                <canvas id="revenueChart"></canvas>
            </div>
        </div>
    </div>

    <div class="table-responsive mt-4">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>Tên rạp</th>
                    <th>Tổng vé bán ra</th>
                    <th>Tổng doanh thu</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in revenueByCinemaDtos)
                {
                    <tr>
                        <th scope="row">@item.Name</th>
                        <td>@item.TotalTicket</td>
                        <td>@item.TotalRevenue</td>
                    </tr>
                }
                <!-- Add more rows as needed -->
            </tbody>
        </table>
        <nav class="d-flex justify-content-end" aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<style>
    .mr-15 {
        margin-right: 15px !important;
    }

    .chart-container {
        height: 400px;
    }
</style>

<script>

        var ticketCtx = document.getElementById('ticketChart').getContext('2d');
        var revenueCtx = document.getElementById('revenueChart').getContext('2d');

        new Chart(ticketCtx, {
            type: 'bar',
            data: {
            labels: ['Rạp 1', 'Rạp 2', 'Rạp 3', 'Rạp 4'],
                datasets: [{
                    label: 'Số vé bán ra',
                    data: [32, 11, 26, 8],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        new Chart(revenueCtx, {
            type: 'bar',
            data: {
            labels: ['Rạp 1', 'Rạp 2', 'Rạp 3', 'Rạp 4'],
                datasets: [{
                    label: 'Doanh thu',
                    data: [8677300, 4282000, 7791000, 2671000],
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

    function UpdateEndDate() {
        var startDate = document.getElementById('start').value;
        document.getElementById('end').min = startDate;
    }
</script>

@code {
    private List<RevenueByCinemaDto> revenueByCinemaDtos = new List<RevenueByCinemaDto>();
    private int totalUsers;
    private int currentPage = 1;
    private int pageSize = 10;

    private DateTime startDate = new DateTime(DateTime.Now.Year,DateTime.Now.Month,1);
    private DateTime endDate = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
    protected async override Task OnInitializedAsync()
    {
        revenueByCinemaDtos = await _ser.GetListRevenueByCinemaAsync(startDate,endDate);
    }
    private async void Reload()
    {
        revenueByCinemaDtos = await _ser.GetListRevenueByCinemaAsync(startDate, endDate);
    }
}
