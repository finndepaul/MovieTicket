@page "/list-film"
@using MovieTicket.Application.DataTransferObjs.Film
@using MovieTicket.Domain.Enums
@inject IFilmService FilmService
@inject NavigationManager NavigationManager
@inject IJSRuntime _JSRuntime
<style>
    .badge-coming-soon {
        background-color: yellow;
        color: black;
    }

    .badge-now-showing {
        background-color: green;
        color: white;
    }

    .badge-ended {
        background-color: red;
        color: white;
    }
</style>

<div class="modal fade" id="DeleteFilmModalToggle" aria-hidden="true" aria-labelledby="DeleteFilmModalToggle" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="DeleteFilmModalToggle">Xác nhận xóa phim</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <p>Bạn có chắc chắn muốn xóa phim này không?</p>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="() => HandleDeleteFilm(SelectedDeleteFilmId)">Xóa</button>

            </div>

        </div>
    </div>
</div>

<div class="container-fluid">
    <button class="btn btn-primary mb-3" @onclick="CreateFilm">+ Tạo phim</button>

    <!-- Movie Table -->
    <div class="table-responsive mb-3">
        <table class="table">
            <thead class="table-light">
                <tr>
                    <th scope="col">Tên phim</th>
                    <th scope="col">Năm phát hành</th>
                    <th scope="col">Thể loại</th>
                    <th scope="col">Lịch chiếu</th>
                    <th scope="col">Trạng thái</th>
                    <th scope="col">Ngày tạo</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (filmDto != null) 
                {
                    @if (filmDto.Any())
                    {
                        @foreach (var film in filmDto)
                        {
                            <tr class="align-middle">
                                <td>@film.Name</td>
                                <td>@film.ReleaseYear</td>
                                <td>
                                    <span class="badge text-bg-primary" style="white-space: normal; width: 200px;">@film.Gerne</span>
                                </td>
                                <td class="text-danger">@film.StartDate?.ToString("dd-MM-yyyy")</td>
                                <td>
                                    <span class="badge @(GetBadgeClass(film.Status))">@film.Status</span>
                                </td>
                                <td>@film.CreatDate?.ToString("dd-MM-yyyy")</td>
                                <td>
                                    <a class="btn btn-outline-primary" href="@($"film/update/{film.Id}")">Update</a>
                                    <button class="btn btn-outline-danger" @onclick="() => GetFilmDeleteId(film.Id)">Delete</button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6"><em>No film found</em></td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6"><em>Loading...</em></td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-end">
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item"><a class="page-link" href="#">Next</a></li>
        </ul>
    </nav>
</div>
<script>
    function openModalDelete(modalId) {
        var modal = new bootstrap.Modal(document.getElementById(modalId));
        modal.show();
    }
</script>
@code {
    private IEnumerable<FilmDto> filmDto { get; set; } = new List<FilmDto>();

    private Guid SelectedDeleteFilmId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        filmDto = await FilmService.GetAllFilms();
    }

    private async Task GetFilmDeleteId(Guid id)
    {
        SelectedDeleteFilmId = id;
        await JSRuntime.InvokeVoidAsync("openModalDelete", "DeleteFilmModalToggle");
    }

    private async Task HandleDeleteFilm(Guid id)
    {
        var result = await FilmService.DeleteFilm(id);
        if (result != null)
        {
            await _JSRuntime.ToastrSuccess("Delete film successfully");
            filmDto = await FilmService.GetAllFilms();
        }
        else
        {
            await _JSRuntime.ToastrError("Delete film failed");
        }
    }
    private void CreateFilm()
    {
        NavigationManager.NavigateTo("/create-film");
    }

    private string GetBadgeClass(FilmStatus? status)
    {
        return status switch
        {
            FilmStatus.ComingSoon => "badge-coming-soon",
            FilmStatus.NowShowing => "badge-now-showing",
            FilmStatus.Ended => "badge-ended",
            _ => "badge-secondary"
        };
    }
}
