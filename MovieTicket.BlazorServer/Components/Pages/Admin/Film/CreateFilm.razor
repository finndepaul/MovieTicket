@page "/create-film"
@using MovieTicket.Application.DataTransferObjs.Film
@using MovieTicket.Application.DataTransferObjs.ScreenType
@using MovieTicket.Application.DataTransferObjs.TranslationType
@using MovieTicket.Domain.Enums
@inject IFilmService FilmService
@inject IFileUpload FileUploadService
@inject IScreenTypeServices ScreenTypeService
@inject NavigationManager NavigationManager
@inject IJSRuntime _JSRuntime
@inject ITranslationTypeService TranslationTypeService

<div class="container-fluid">
    <button class="btn btn-outline-secondary mb-3" @onclick="GoBack">Quay lại</button>
    <EditForm Model="filmCreateRequest" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="tenPhim" class="form-label">Tên phim</label>
                <input type="text" class="form-control" id="tenPhim" @bind="filmCreateRequest.Name" placeholder="Enter name">
                <ValidationMessage For="@(() => filmCreateRequest.Name)" />
            </div>
            <div class="col-md-6">
                <label for="hinhThucChieu" class="form-label">Hình thức chiếu</label>
                <select class="form-select" id="hinhThucChieu" @onchange="OnScreenTypeChange" multiple>
                    @foreach (var screenType in screenTypes)
                    {
                        <option value="@screenType.Id">@screenType.Type</option>
                    }
                </select>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="tenPhimEng" class="form-label">Tên phim (tiếng anh)</label>
                <input type="text" class="form-control" id="tenPhimEng" @bind="filmCreateRequest.EnglishName" placeholder="Enter english name">
                <ValidationMessage For="@(() => filmCreateRequest.EnglishName)" />
            </div>
            <div class="col-md-6">
                <label for="hinhThucDich" class="form-label">Hình thức dịch</label>
                <select class="form-select" id="hinhThucChieu" @bind="translationTypeId">
                    <option selected>Select a translation type</option>
                    @foreach (var translationType in translationTypes)
                    {
                        <option value="@translationType.Id">@translationType.Type</option>
                    }
                </select>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="trailer" class="form-label">Trailer</label>
                <input type="text" class="form-control" id="trailer" @bind="filmCreateRequest.Trailer" placeholder="Enter trailer">
                <ValidationMessage For="@(() => filmCreateRequest.Trailer)" />
            </div>
            <div class="col-md-6">
                <label for="doTuoi" class="form-label">Độ tuổi xem phim</label>
                <input type="number" class="form-control" id="doTuoi" @bind="filmCreateRequest.Rating" placeholder="Enter rating">
                <ValidationMessage For="@(() => filmCreateRequest.Rating)" />
            </div>
        </div>

        <div class="mb-3">
            <label for="moTa" class="form-label">Mô tả</label>
            <textarea class="form-control" id="moTa" @bind="filmCreateRequest.Description" rows="3" placeholder="Enter description"></textarea>
            <ValidationMessage For="@(() => filmCreateRequest.Description)" />
        </div>

        <div class="row mb-3">
            <div class="col-md-4">
                <label for="theLoai" class="form-label">Thể loại</label>
                <input type="text" class="form-control" id="theLoai" @bind="filmCreateRequest.Gerne" placeholder="Enter genre">
                <ValidationMessage For="@(() => filmCreateRequest.Gerne)" />
            </div>
            <div class="col-md-4">
                <label for="daoDien" class="form-label">Đạo diễn</label>
                <input type="text" class="form-control" id="daoDien" @bind="filmCreateRequest.Director" placeholder="Enter director">
                <ValidationMessage For="@(() => filmCreateRequest.Director)" />
            </div>
            <div class="col-md-4">
                <label for="dienVien" class="form-label">Diễn viên</label>
                <input type="text" class="form-control" id="dienVien" @bind="filmCreateRequest.Cast" placeholder="Enter cast">
                <ValidationMessage For="@(() => filmCreateRequest.Cast)" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-4">
                <label for="ngayChieu" class="form-label">Lịch chiếu</label>
                <input type="date" class="form-control" id="ngayChieu" @bind="filmCreateRequest.StartDate">
                <ValidationMessage For="@(() => filmCreateRequest.StartDate)" />
            </div>
            <div class="col-md-4">
                <label for="namPhatHanh" class="form-label">Năm phát hành</label>
                <input type="number" class="form-control" id="namPhatHanh" @bind="filmCreateRequest.ReleaseYear" placeholder="Enter release year">
                <ValidationMessage For="@(() => filmCreateRequest.ReleaseYear)" />
            </div>
            <div class="col-md-4">
                <label for="thoiLuong" class="form-label">Thời lượng phim (phút)</label>
                <input type="number" class="form-control" id="thoiLuong" @bind="filmCreateRequest.RunningTime" placeholder="Enter duration">
                <ValidationMessage For="@(() => filmCreateRequest.RunningTime)" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="trangThai" class="form-label">Trạng thái</label>
                <select class="form-select" id="trangThai" @bind="filmCreateRequest.Status">
                    <option selected>Select a Status</option>
                    @foreach (var Item in Enum.GetValues(typeof(FilmStatus)))
                    {
                        <option value="@Item">@Item</option>
                    }
                </select>
            </div>
            <div class="col-md-6">
                <label for="quocGia" class="form-label">Quốc gia</label>
                <input type="text" class="form-control" id="quocGia" @bind="filmCreateRequest.Nation" placeholder="Enter nation">
                <ValidationMessage For="@(() => filmCreateRequest.Nation)" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="language" class="form-label">Ngôn ngữ</label>
                <input type="text" class="form-control" id="language" @bind="filmCreateRequest.Language" placeholder="Enter language">
                <ValidationMessage For="@(() => filmCreateRequest.Language)" />
            </div>
            <div class="col-md-6">
                <label for="poster" class="form-label">Poster</label>
                <InputFile OnChange="OnInputFileChange" class="form-control" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>

@code {
    private FilmCreateRequest filmCreateRequest = new FilmCreateRequest();
    private IBrowserFile? posterFile;
    private List<ScreenTypeDto> screenTypes = new List<ScreenTypeDto>();
    private List<TranslationTypeDto> translationTypes = new List<TranslationTypeDto>();

    private List<Guid> selectedScreenTypeIds;
    private Guid translationTypeId;

    protected override async Task OnInitializedAsync()
    {
        screenTypes = await ScreenTypeService.GetAllScreenTypes();
        translationTypes = await TranslationTypeService.GetAllTranslationTypes();
    }

    private async Task HandleValidSubmit()
    {

        if (posterFile != null)
        {
            filmCreateRequest.Poster = await FileUploadService.UploadFile(posterFile);
        }
        filmCreateRequest.ScreenTypeIds = selectedScreenTypeIds ;
        filmCreateRequest.TranslationTypeIds = new List<Guid> { translationTypeId };
        await FilmService.CreateFilm(filmCreateRequest);
        await _JSRuntime.ToastrSuccess("Create film successfully");
        NavigationManager.NavigateTo("/list-film");

    }
    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        posterFile = e.File;
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/list-film");
    }
    private void OnScreenTypeChange(ChangeEventArgs e)
    {
        var selectedOptions = ((IEnumerable<string>)e.Value).Select(Guid.Parse).ToList();
        selectedScreenTypeIds = selectedOptions;
    }
}
