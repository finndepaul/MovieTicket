@page "/film/update/{Id:guid}"
@using MovieTicket.Application.DataTransferObjs.Film
@using MovieTicket.Application.DataTransferObjs.ScreenType
@using MovieTicket.Application.DataTransferObjs.TranslationType
@using MovieTicket.BlazorServer.Services.Interfaces.IFilmService
@using MovieTicket.BlazorServer.Services.Interfaces.IScreenTypeService
@using MovieTicket.BlazorServer.Services.Interfaces.ITranslationTypeService
@using MovieTicket.Domain.Enums
@inject IFilmService FilmService
@inject NavigationManager NavigationManager
@inject IFileUpload FileUploadService
@inject IJSRuntime _JSRuntime
@inject ITranslationTypeService TranslationTypeService
@inject IScreenTypeService ScreenTypeService
<div class="container-fluid">
    <button class="btn btn-outline-secondary mb-3" @onclick="GoBack">Quay lại</button>

    <EditForm Model="filmUpdateRequest" OnValidSubmit="HandleFilmUpdate">
        <DataAnnotationsValidator />
        <div class="row mb-3">
            <div class="col-md-6">
                <label for="tenPhim" class="form-label">Tên phim</label>
                <input type="text" class="form-control" id="tenPhim" @bind="filmUpdateRequest.Name" placeholder="Enter name">
                <ValidationMessage For="@(() => filmUpdateRequest.Name)" />
            </div>
            <div class="col-md-6">
                <label for="hinhThucChieu" class="form-label">Hình thức chiếu</label>
                <InputSelect class="form-control" id="hinhThucChieu" @bind-Value="@selectedScreenTypeId">
                    @foreach (var screenType in screenTypes)
                    {
                        <option value="@screenType.Id">@screenType.Type</option>
                    }
                </InputSelect>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="tenPhimEng" class="form-label">Tên phim (tiếng anh)</label>
                <input type="text" class="form-control" id="tenPhimEng" @bind="filmUpdateRequest.EnglishName" placeholder="Enter english name">
                <ValidationMessage For="@(() => filmUpdateRequest.EnglishName)" />
            </div>
            <div class="col-md-6">
                <label for="hinhThucDich" class="form-label">Hình thức dịch</label>
                <InputSelect  class="form-control" id="hinhThucDich" @bind-Value="filmUpdateRequest.TranslationTypeIds">
                    @foreach (var translationType in translationTypes)
                    {
                        <option value="@translationType.Id">@translationType.Type</option>
                    }
                    @if (filmUpdateRequest.TranslationTypeIds != null)
                    {
                        <option selected value="">TranslationTypeName</option>
                    }
                </InputSelect>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="trailer" class="form-label">Trailer</label>
                <input type="text" class="form-control" id="trailer" @bind="filmUpdateRequest.Trailer" placeholder="Enter trailer">
                <ValidationMessage For="@(() => filmUpdateRequest.Trailer)" />
            </div>
            <div class="col-md-6">
                <label for="doTuoi" class="form-label">Độ tuổi xem phim</label>
                <input type="number" class="form-control" id="doTuoi" @bind="filmUpdateRequest.Rating" placeholder="Enter rating">
                <ValidationMessage For="@(() => filmUpdateRequest.Rating)" />
            </div>
        </div>

        <div class="mb-3">
            <label for="moTa" class="form-label">Mô tả</label>
            <textarea class="form-control" id="moTa" @bind="filmUpdateRequest.Description" rows="3" placeholder="Enter description"></textarea>
            <ValidationMessage For="@(() => filmUpdateRequest.Description)" />
        </div>

        <div class="row mb-3">
            <div class="col-md-4">
                <label for="theLoai" class="form-label">Thể loại</label>
                <input type="text" class="form-control" id="theLoai" @bind="filmUpdateRequest.Gerne" placeholder="Enter genre">
                <ValidationMessage For="@(() => filmUpdateRequest.Gerne)" />
            </div>
            <div class="col-md-4">
                <label for="daoDien" class="form-label">Đạo diễn</label>
                <input type="text" class="form-control" id="daoDien" @bind="filmUpdateRequest.Director" placeholder="Enter director">
                <ValidationMessage For="@(() => filmUpdateRequest.Director)" />
            </div>
            <div class="col-md-4">
                <label for="dienVien" class="form-label">Diễn viên</label>
                <input type="text" class="form-control" id="dienVien" @bind="filmUpdateRequest.Cast" placeholder="Enter cast">
                <ValidationMessage For="@(() => filmUpdateRequest.Cast)" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-4">
                <label for="ngayChieu" class="form-label">Lịch chiếu</label>
                <input type="date" class="form-control" id="ngayChieu" @bind="filmUpdateRequest.StartDate">
                <ValidationMessage For="@(() => filmUpdateRequest.StartDate)" />
            </div>
            <div class="col-md-4">
                <label for="namPhatHanh" class="form-label">Năm phát hành</label>
                <input type="number" class="form-control" id="namPhatHanh" @bind="filmUpdateRequest.ReleaseYear" placeholder="Enter release year">
                <ValidationMessage For="@(() => filmUpdateRequest.ReleaseYear)" />
            </div>
            <div class="col-md-4">
                <label for="thoiLuong" class="form-label">Thời lượng phim (phút)</label>
                <input type="number" class="form-control" id="thoiLuong" @bind="filmUpdateRequest.RunningTime" placeholder="Enter duration">
                <ValidationMessage For="@(() => filmUpdateRequest.RunningTime)" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="trangThai" class="form-label">Trạng thái</label>
                <select class="form-select" id="trangThai" @bind="filmUpdateRequest.Status">
                    <option selected>Select a status</option>
                    @foreach (var Item in Enum.GetValues(typeof(FilmStatus)))
                    {
                        <option value="@Item">@Item</option>
                    }
                </select>
            </div>
            <div class="col-md-6">
                <label for="quocGia" class="form-label">Quốc gia</label>
                <input type="text" class="form-control" id="quocGia" @bind="filmUpdateRequest.Nation" placeholder="Enter nation">
                <ValidationMessage For="@(() => filmUpdateRequest.Nation)" />
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <label for="language" class="form-label">Ngôn ngữ</label>
                <input type="text" class="form-control" id="language" @bind="filmUpdateRequest.Language" placeholder="Enter language">
                <ValidationMessage For="@(() => filmUpdateRequest.Language)" />
            </div>
            <div class="col-md-6">
                <label for="poster" class="form-label">Poster</label>
                <InputFile OnChange="OnInputFileChange" class="form-control" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public Guid Id { get; set; }
    private FilmUpdateRequest filmUpdateRequest = new FilmUpdateRequest();
    private FilmDto filmDto = new FilmDto();
    private IBrowserFile? posterFile;
    //Lấy danh sách hình thức chiếu và dịch
    private List<ScreenTypeDto> screenTypes = new List<ScreenTypeDto>();
    private List<TranslationTypeDto> translationTypes = new List<TranslationTypeDto>();
    private Guid selectedScreenTypeId;
    private Guid selectedTranslationTypeId;
    protected async override Task OnInitializedAsync()
    {
        //Lấy thông tin phim theo id
        filmDto = await FilmService.GetById(Id);
        //Gọi API lấy danh sách hình thức chiếu và dịch
        screenTypes = await ScreenTypeService.GetAllScreenTypes();
        translationTypes = await TranslationTypeService.GetAllTranslationTypes();
        filmUpdateRequest = new FilmUpdateRequest()
            {
                Name = filmDto.Name,
                EnglishName = filmDto.EnglishName,
                Description = filmDto.Description,
                Gerne = filmDto.Gerne,
                Director = filmDto.Director,
                Cast = filmDto.Cast,
                StartDate = filmDto.StartDate,
                ReleaseYear = filmDto.ReleaseYear,
                RunningTime = filmDto.RunningTime,
                Status = filmDto.Status,
                Nation = filmDto.Nation,
                Language = filmDto.Language,
                Poster = filmDto.Poster,
                Trailer = filmDto.Trailer,
                Rating = filmDto.Rating,
                ScreenTypeIds = filmDto.ScreenTypeIds,
                TranslationTypeIds = filmDto.TranslationTypeIds,
            };
        selectedScreenTypeId = filmDto.ScreenTypeIds.FirstOrDefault();
        selectedTranslationTypeId = filmDto.TranslationTypeIds.FirstOrDefault();
        
    }

    private async Task HandleFilmUpdate()
    {
        if (posterFile != null)
        {
            filmUpdateRequest.Poster = await FileUploadService.UploadFile(posterFile);
        }

        filmUpdateRequest.ScreenTypeIds = new List<Guid> { selectedScreenTypeId };
        filmUpdateRequest.TranslationTypeIds = new List<Guid> { selectedTranslationTypeId };

        var response = await FilmService.UpdateFilm(Id, filmUpdateRequest);
        if (response != null)
        {
            await _JSRuntime.ToastrSuccess("Update film successfully");
            NavigationManager.NavigateTo("/list-film");
        }
        else
        {
            await _JSRuntime.ToastrError("Update film failed");
        }

    }
    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        posterFile = e.File;
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/list-film");
    }
}
