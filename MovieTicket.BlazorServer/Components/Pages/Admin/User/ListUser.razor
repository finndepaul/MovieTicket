@page "/user"
@using MovieTicket.Application.DataTransferObjs.Account
@using MovieTicket.Application.ValueObjs.Paginations
@inject IAccountService AccountService
@attribute [Authorize(Roles = "Admin")]

<div class="container-fluid">
    <div class="row">
        <div class="col-12 d-flex justify-content-between align-items-center">
            <div>
                <a class="btn btn-primary me-2" href="/user/create">+ Tạo user</a>
            </div>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col">
            <table class="table table-hover table-stripted">
                <thead>
                    <tr>
                        <th>Avatar</th>
                        <th>Họ tên</th>
                        <th>Tên tài khoản</th>
                        <th>Email</th>
                        <th>Số điện thoại</th>
                        <th>Quyền</th>
                        <th>Trạng thái</th>
                        <th>Ngày tạo</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody class="align-middle">
                    @if (accounts != null)
                    {
                        @if (accounts.Any())
                        {
                            @foreach (var account in accounts)
                            {
                                <tr>
                                    <td><img src="@account.Avatar" alt="User Avatar" class="rounded-circle" style="width: 40px; height: 40px;"></td>
                                    <td>@account.Name</td>
                                    <td>@account.Username</td>
                                    <td>@account.Email</td>
                                    <td>@account.Phone</td>
                                    <td><span class="badge bg-danger">@account.Role</span></td>
                                    <td><span class="badge bg-success">@account.Status</span></td>
                                    <td>@account.CreateDate?.ToString("dd-MM-yyyy")</td>
                                    <td>
                                        <a class="btn btn-outline-primary" href="@($"/userdetail/{account.Id}")">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center">Không có dữ liệu</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="9" class="text-center">Loading...</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <Pagination MetaData="metaData" SelectedPage="SelectedPage" Spread="2" />
                </tfoot>
            </table>
        </div>
    </div>
</div>

@code {
    private IEnumerable<AccountDto> accounts = new List<AccountDto>();
    private PagingParameters pagingParameters = new PagingParameters { PageNumber = 1, PageSize = 10 };
    private MetaData metaData = new MetaData();

    protected override async Task OnInitializedAsync()
    {
        await LoadAccounts();
    }

    private async Task LoadAccounts()
    {
        var pagedAccounts = await AccountService.GetAllAccPaginition(pagingParameters);
        accounts = pagedAccounts.Item;
        metaData = pagedAccounts.MetaData;
    }

    private async Task SelectedPage(int page)
    {
        pagingParameters.PageNumber = page;
        await LoadAccounts();
    }

}
