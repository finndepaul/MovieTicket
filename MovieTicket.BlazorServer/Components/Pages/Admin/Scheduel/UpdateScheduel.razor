@page "/update-scheduel/{id:guid}"
@using MovieTicket.Application.DataTransferObjs.Schedule.Request
@using MovieTicket.BlazorServer.Services.Interfaces
@inject IScheduelService _scheduleService
@inject NavigationManager _navigationManager;

<EditForm Model="request" OnValidSubmit="HandleUpdateScheduel">
    <div class="input-group mb-3">
        <label class="input-group-text" for="Name">Tên phim</label>
        <input type="text" class="form-control" name="name" value="@FilmName" disabled />
    </div>
    <div class="input-group mb-3">
        <label class="input-group-text" for="date">Thời gian khởi chiếu</label>
        <input type="date" class="form-control" name="date" value="@FilmReleaseDate" disabled />
    </div>
    <div class="input-group mb-3">
        <label class="input-group-text" for="startDate">Ngày bắt đầu</label>
        <input type="date" class="form-control" id="startDate" @bind-value="request.StartDate" />
    </div>

    <div class="input-group mb-3">
        <label class="input-group-text" for="endDate">Ngày kết thúc</label>
        <input type="date" class="form-control" id="endDate" @bind-value="request.EndDate" />
    </div>
    <div class="text-center"><button type="submit" class="btn btn-primary">Lưu</button></div>
</EditForm>

@code {
    [Parameter]
    public string ScheduleId { get; set; }
    private string FilmName { get; set; }
    private string FilmReleaseDate { get; set; } = DateTime.Now.ToString("yyyy-MM-dd");
    private UpdateScheduleRequest request = new UpdateScheduleRequest();
    CancellationToken cancellationToken;

    protected override async Task OnParametersSetAsync()
    {
        // Lấy lịch chiếu dựa trên ScheduleId
        if (!string.IsNullOrEmpty(ScheduleId))
        {
            var schedule = await _scheduleService.GetByIdAsync(Guid.Parse(ScheduleId));
            request = new UpdateScheduleRequest
                {
                    StartDate = schedule.StartDate,
                    EndDate = schedule.EndDate
                };
            FilmName = schedule.FilmName;
            FilmReleaseDate = schedule.FilmReleaseDate.ToString("yyyy-MM-dd");
        }
    }

    private async Task HandleUpdateScheduel()
    {
        request.Id = Guid.Parse(ScheduleId);
        var result = await _scheduleService.UpdateAsync(request, cancellationToken);
        if (result)
        {
            _navigationManager.NavigateTo("/scheduel", forceLoad: true);
        }
    }
}