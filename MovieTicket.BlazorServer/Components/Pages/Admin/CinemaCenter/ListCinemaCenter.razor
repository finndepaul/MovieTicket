@page "/cinema-center"
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using MovieTicket.BlazorServer.Helper
@inject NavigationManager Navigation
@attribute [Authorize(Roles = "Admin")]
@* Modal Xóa *@
<div class="modal fade" id="DeleteCinemaCenter" aria-hidden="true" aria-labelledby="DeleteCinemaCenterLabel" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" data-bs-theme="dark">
                <h1 class="modal-title fs-5" id="DeleteLabel">Xác nhận xóa rạp này không</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa rạp này không?</p>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="() => HandleDeleteAsync(CinemaCenterId)">Xóa</button>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="d-flex justify-content-start align-items-center mb-3">
        <a class="btn btn-success me-2" href="/cinema-center/create">Tạo Rạp Chiếu</a>
    </div>

    <div class="d-flex mt-4" style="max-width: 900px;">
        <input type="text" class="form-control form-control-sm me-2" placeholder="Tìm theo tên" aria-label="Tìm theo tên" style="width: 40%;" @bind="@CinemaCenterName">
        <input type="text" class="form-control form-control-sm me-2" placeholder="Tìm theo địa chỉ" aria-label="Tìm theo địa chỉ" style="width: 40%;" @bind="@CinemaCenterAddress">
        <button class="btn btn-primary btn-sm" type="button" @onclick="Search">Tìm kiếm</button>
    </div>

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col" class="small-col">#</th>
                <th scope="col">Tên Rạp Chiếu</th>
                <th scope="col">Địa Chỉ</th>
                <th scope="col">Ngày Tạo</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @if (CinemaCenters.Any())
            {
                int index = 1;
                @foreach (var item in CinemaCenters)
                {
                    <tr>
                        <th scope="row" class="small-col">@index</th>
                        <td>@item.Name</td>
                        <td>@item.Address</td>
                        <td>@item.CreateDate?.ToString("dd-MM-yyyy")</td>
                        <td>
                            <span class="p-2 m-2 badge text-light bg-primary" role="button" @onclick="() => NavigateToUpdate(item.Id)">
                                <i class="bi bi-pencil-square fs-6"></i>
                            </span>
                            <span class="p-2 m-2 badge text-light bg-danger" role="button" @onclick="() => DeleteId(item.Id.ToString())">
                                <i class="bi bi-trash3 fs-6"></i>
                            </span>
                        </td>
                    </tr>
                    index++;
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="text-center">Không có dữ liệu</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <Pagination MetaData="MetaData" Spread="3" SelectedPage="SelectedPage"></Pagination>
        </tfoot>
    </table>
</div>
<script>
    function openModalUpdate(modalId) {
        var modal = new bootstrap.Modal(document.getElementById(modalId));
        modal.show();
    }
    function openModalDelete(modalId) {
        var modal = new bootstrap.Modal(document.getElementById(modalId));
        modal.show();
    }
    function closeModal(modalId) {
        var modalElement = document.getElementById(modalId);
        var modal = bootstrap.Modal.getInstance(modalElement);
        if (modal) {
            modal.hide();
        }
    }
</script>
<style>
    .pagination-wrapper {
        display: flex;
        justify-content: flex-end;
    }

    .btn:hover, .badge:hover {
        transform: scale(1.1); 
        transition: transform 0.2s ease-in-out; 
    }

    .small-col {
        width: 50px; 
        text-align: center; 
    }
</style>

@code {
    private string CinemaCenterId = string.Empty;
    private string CinemaCenterName = string.Empty;
    private string CinemaCenterAddress = string.Empty;
    private IQueryable<CinemaCenterDto> CinemaCenters = Enumerable.Empty<CinemaCenterDto>().AsQueryable();
    private CinemaCenterSearch CinemaCenterSearch = new CinemaCenterSearch();
    private PagingParameters PagingParameters = new PagingParameters();
    public MetaData MetaData { get; set; } = new MetaData();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        var cinemaCenters = await CinemaCenterService.GetAllCinemaCenter(CinemaCenterSearch, PagingParameters);
        CinemaCenters = cinemaCenters.Item.AsQueryable();
        MetaData = cinemaCenters.MetaData;
        StateHasChanged();
    }
    private async Task Search()
    {
        CinemaCenterSearch.Name = CinemaCenterName;
        CinemaCenterSearch.Address = CinemaCenterAddress;
        await LoadData();
    }
    public async Task SelectedPage(int page)
	{
		PagingParameters.PageNumber = page;
		await LoadData();
	}
    private async Task DeleteId(string id)
    {
        CinemaCenterId = id;
        await JSRuntime.InvokeVoidAsync("openModalDelete", "DeleteCinemaCenter");
    }
    private async Task HandleDeleteAsync(string id)
    {
        var result = await CinemaCenterService.Delete(Guid.Parse(id));
        if (result.Status == 200)
        {
            await JSRuntime.ToastrSuccess(result.Message);
            await JSRuntime.InvokeVoidAsync("closeModal", "DeleteCinemaCenter");
            await LoadData();
            StateHasChanged();
        }
        else
        {
            await JSRuntime.ToastrError(result.Message);
        }
    }
    private async Task NavigateToUpdate(Guid id)
    {
        Navigation.NavigateTo($"/cinema-center/update/{id}");
    }
}
