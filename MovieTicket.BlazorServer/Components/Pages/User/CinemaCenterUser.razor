@page "/cinemacenter-user"
@using MovieTicket.Application.DataTransferObjs.CinemaCenter
@using static MovieTicket.BlazorServer.Components.Pages.User.Home
@layout MovieTicket.BlazorServer.Components.Layout.UserLayout
<div class="container">
    <div class="intro-section">
        <h1 style="margin-top:50px" class="header">Chào mừng đến với VHD CINEMAS</h1>
        <p class="subtitle">
            VHD CINEMAS là hệ thống rạp chiếu phim hiện đại, nơi mang đến cho bạn những trải nghiệm điện ảnh sống động, chân thực và tuyệt vời nhất.
        </p>
        <img src="/img/banner/bannerCinema1.jpg" alt="Cinema Intro" class="intro-image" />
    </div>

    <div class="features-section">
        <h2 class="section-header">Tại sao chọn VHD CINEMAS?</h2>
        <div class="features">
            <div class="feature-item">
                <h3>🎥 Công nghệ hình ảnh và âm thanh tiên tiến</h3>
                <p>
                    Hệ thống rạp của chúng tôi được trang bị công nghệ màn hình IMAX, 4DX và âm thanh Dolby Atmos, mang lại trải nghiệm điện ảnh tuyệt vời.
                </p>
            </div>
            <div class="feature-item">
                <h3>🍿 Dịch vụ tiện ích</h3>
                <p>
                    Với đa dạng đồ ăn, thức uống cùng không gian sạch sẽ, hiện đại, bạn sẽ luôn cảm thấy thoải mái khi ghé thăm.
                </p>
            </div>
            <div class="feature-item">
                <h3>🌟 Chương trình khuyến mãi hấp dẫn</h3>
                <p>
                    Hãy khám phá các ưu đãi đặc biệt hàng tuần và nhận vé xem phim miễn phí với chương trình thành viên của chúng tôi.
                </p>
            </div>
        </div>
    </div>

    <div class="theatre-list">
        <h1 class="header2">VHD CINEMAS</h1>
        <div class="cinemas">
            @foreach (var item in CinemaCenterDtos)
            {
                <p @onclick="() => OnCinemaCenterSelected(item.Id)"
                   class="cinema-item @(cinemaCenterDto != null && cinemaCenterDto.Id == item.Id ? "selected" : "")">
                    @item.Name
                </p>
            }
        </div>
    </div>

    <div class="cinema-details">
        @if (cinemaCenterDto != null && cinemaCenterDto.Id != Guid.Empty)
        {
            <h2>Thông Tin Rạp</h2>
            <p><strong>Tên rạp:</strong> @cinemaCenterDto.Name</p>
            <p><strong>Địa chỉ:</strong> @cinemaCenterDto.Address</p>
            <div>
                <strong>Địa chỉ Map:</strong>
                <div class="map-container" style="height: 300px;">
                    <iframe src="@ExtractedMapUrl" width="100%" height="300" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
                </div>
            </div>
        }
        else
        {
            <p>Hãy chọn một rạp để xem thông tin chi tiết.</p>
        }
    </div>

</div>
<style>
    .container {
        max-width: 1200px;
    }

    .intro-section {
        text-align: center;
        margin-bottom: 40px;
    }

    .header {
        font-size: 2.5em;
        color: #d32f2f;
    }

    .subtitle {
        font-size: 1.2em;
        color: #555;
        margin: 20px 0;
    }

    .intro-image {
        max-width: 100%;
        height: auto;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .features-section, .locations-section, .contact-section {
        margin-bottom: 40px;
    }

    .section-header {
        font-size: 2em;
        margin-bottom: 20px;
        color: #333;
    }

    .features {
        display: flex;
        gap: 20px;
        flex-wrap: wrap;
    }

    .feature-item {
        flex: 1;
        min-width: 300px;
        background: #f9f9f9;
        border: 1px solid #ddd;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .feature-item h3 {
        color: #d32f2f;
        margin-bottom: 10px;
    }

    .header2 {
        text-align: center;
        font-size: 36px;
        font-weight: bold;
        color: #ccc;
        margin-bottom: 20px;
    }

    .theatre-list {
        font-family: Arial, sans-serif;
        background-color: #1c1c1c;
        color: white;
        width: 100%;
        margin: 50px auto;
        padding: 20px;
    }

    .cinemas {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
    }

        .cinemas p {
            margin: 0;
            padding: 5px;
            background-color: #2c2c2c;
            border-radius: 5px;
            text-align: center;
        }

            .cinemas p:hover {
                background-color: red;
                cursor: pointer;
            }

    .cinema-item {
        margin: 0;
        padding: 10px;
        background-color: #2c2c2c;
        border-radius: 5px;
        text-align: center;
        color: white;
        transition: background-color 0.3s ease;
        cursor: pointer;
    }

        .cinema-item:hover {
            background-color: red;
        }

        .cinema-item.selected {
            background-color: red; /* Giữ nguyên màu khi được chọn */
            font-weight: bold;
        }

</style>
@code{
    private IQueryable<CinemaCenterDto> CinemaCenterDtos = Enumerable.Empty<CinemaCenterDto>().AsQueryable();
    private CinemaCenterDto cinemaCenterDto = new CinemaCenterDto();
    private CinemaCenterSearch CinemaCenterSearch = new CinemaCenterSearch();
    private string ?ExtractedMapUrl;
    protected override async Task OnInitializedAsync()
    {
        CinemaCenterDtos = await CinemaCenterService.GetCinemaCentersAsync(CinemaCenterSearch);

        if (CinemaCenterDtos.Any())
        {
            var firstCinemaCenter = CinemaCenterDtos.First();
            cinemaCenterDto = firstCinemaCenter;
            ExtractedMapUrl = ExtractUrlFromIframe(cinemaCenterDto.AddressMap);

            // Gọi API để lấy chi tiết rạp nếu cần
            var data = await CinemaCenterService.GetCinemaCenterById(firstCinemaCenter.Id);
            if (data.Data != null)
            {
                cinemaCenterDto = data.Data;
                ExtractedMapUrl = ExtractUrlFromIframe(cinemaCenterDto.AddressMap);
            }
        }
    }

    private async Task OnCinemaCenterSelected(Guid cinemaCenterId)
    {
        var data = await CinemaCenterService.GetCinemaCenterById(cinemaCenterId);
        if (data.Data != null)
        {
            cinemaCenterDto = data.Data;
            ExtractedMapUrl = ExtractUrlFromIframe(cinemaCenterDto.AddressMap);
        }     
    }
    private string ExtractUrlFromIframe(string iframeHtml)
    {
        if (string.IsNullOrWhiteSpace(iframeHtml))
        {
            return null;
        }
        var match = System.Text.RegularExpressions.Regex.Match(iframeHtml, "src\\s*=\\s*\"([^\"]+)\"");
        return match.Success ? match.Groups[1].Value : null;
    }
}