<style>
    body {
        background-color: #f8f8f8;
    }

    .payment-container {
        width: 80%;
        border: 1px solid #ddd;
        background-color: #fff;
    }

    .container-payment {
        max-width: 1200px;
        margin: auto;
        background-color: #fff;
    }

    .payment-header {
        background-color: #333;
        color: #fff;
        padding: 15px;
        text-align: center;
        font-weight: bold;
    }

    .section-title {
        background-color: #e6e6e6;
        padding: 10px;
        font-weight: bold;
    }

    .btn-option {
        display: block;
        width: 100%;
        margin-bottom: 10px;
        text-align: left;
        padding: 10px;
        background-color: rgb(255, 241, 206);
        border: none;
        font-weight: 500;
    }

    .summary-box {
        background-color: #fffae5;
        padding: 15px;
        border: 1px solid #ddd;
    }

    .countdown-box {
        padding: 15px;
        border: 1px solid #ddd;
        text-align: center;
    }

    .total-amount {
        color: #d9534f;
        font-weight: bold;
        font-size: 1.2rem;
    }

    .form-check-input {
        margin-right: 10px;
    }

    .summary-container {
        max-width: 400px;
        margin: auto;
        background-color: #fdfbe8;
        border: 1px solid #ddd;
        padding: 15px;
        border-radius: 5px;
    }

    .summary-item {
        display: flex;
        justify-content: space-between;
        padding: 10px;
        background-color: #fff6e0;
        border: 1px solid #ddd;
        margin-bottom: 10px;
        font-size: 1rem;
    }

        .summary-item.red {
            background-color: #d9534f;
            color: #fff;
            font-weight: bold;
            text-align: center;
        }

    .countdown-container {
        text-align: center;
        background-color: #fdfbe8;
        padding: 15px;
        border-radius: 5px;
    }

    .countdown-box {
        display: inline-block;
        background-color: #d9d9d9;
        padding: 10px 15px;
        border-radius: 5px;
        margin: 5px;
        font-weight: bold;
        color: #d9534f;
        font-size: 1.5rem;
    }

    .countdown-title {
        font-size: 1rem;
        margin-bottom: 10px;
        font-weight: bold;
    }
</style>

<div class="d-flex container-payment p-3">
    <div class="payment-container">
        <!-- Bước 1: Giảm giá -->
        <div class="section-title d-flex justify-content-between">
            <div>Bước 1: GIẢM GIÁ</div>
            <button class="btn btn-secondary" @onclick="Reload">Đặt lại</button>
        </div>
        <div class="p-3">
            <!-- Phần mã giảm giá -->
            <div class="mb-3 btn-option pe-5">
                <label for="discountCode" class="form-label">Mã giảm giá:</label>
                <input type="text"
                       class="form-control mb-3"
                       id="discountCode"
                       placeholder="Nhập mã giảm giá:"
                       @bind-value="DiscountCode"
                       disabled="@IsVHDUsed">
                <button class="ms-2 btn btn-success" @onclick="UseDiscountCode">Xác nhận</button>
            </div>

            <!-- Phần điểm VHD -->
            <div class="mb-3 btn-option pe-5">
                <label for="vhdPoints" class="form-label">Điểm VHD:</label>
                <input type="number"
                       class="form-control"
                       id="vhdPoints"
                       placeholder="Sử dụng điểm"
                       @bind-value="VHDPoints"
                       disabled="@IsDiscountCodeUsed">
                <div id="passwordHelpBlock" class="form-text ms-3">
                    <p class="m-0 p-0">Điểm hiện tại: @CurrentPoints</p>
                </div>
                <button class="ms-2 btn btn-success" @onclick="UseVHDPoints">Xác nhận</button>
            </div>
        </div>

        <!-- Bước 3: Hình thức thanh toán -->
        <div class="section-title">Bước 3: HÌNH THỨC THANH TOÁN</div>
        <div class="p-3">
            <div class="form-check">
                <input class="form-check-input" type="radio" name="payment" id="atm">
                <label class="form-check-label" for="atm">ATM card (Thẻ nội địa)</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="payment" id="visa">
                <label class="form-check-label" for="visa">Thẻ quốc tế (Visa, Master, Amex, JCB)</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="payment" id="vnpay">
                <label class="form-check-label" for="vnpay">Nhập VNPAYCGV giảm đến 10K/bill</label>
            </div>
        </div>
    </div>
    <!-- Tổng cộng và đồng hồ đếm ngược -->
    <div>
        <div class="summary-container">
            <div class="summary-item">
                <span>Tổng cộng</span>
                <span></span>
            </div>
            <div class="summary-item">
                <span>VIP:</span>
                <span>100,00 ₫</span>
            </div>
            <div class="summary-item">
                <span>Khuyến mãi:</span>
                <span>0,00 ₫</span>
            </div>
            <div class="summary-item red">
                <span>Tổng số tiền thanh toán:</span>
                <span>100,00 ₫</span>
            </div>
        </div>

        <div class="countdown-container">
            <div class="countdown-title">Countdown Clock</div>
            <div class="countdown-box">@_timeLeft.ToString(@"mm")</div>
            <div class="countdown-box">@_timeLeft.ToString(@"ss")</div>
        </div>
    </div>
</div>

@code {
    // Các biến dùng để quản lý trạng thái
    private string DiscountCode { get; set; } = string.Empty;
    private int VHDPoints { get; set; } = 0;
    private int CurrentPoints { get; set; } = 100; // Ví dụ: điểm hiện tại là 100
    private bool IsDiscountCodeUsed { get; set; } = false;
    private bool IsVHDUsed { get; set; } = false;
    private TimeSpan _timeLeft;
    private Timer? _timer;
    private bool _isCountdownFinished = false;
    private DateTime EndTime = DateTime.Now.AddMinutes(1);

    // Xử lý khi nhấn nút xác nhận mã giảm giá
    private void UseDiscountCode()
    {
        if (!string.IsNullOrEmpty(DiscountCode))
        {
            IsDiscountCodeUsed = true;
            IsVHDUsed = false;
        }
    }

    // Xử lý khi nhấn nút xác nhận điểm VHD
    private void UseVHDPoints()
    {
        if (VHDPoints > 0 && VHDPoints <= CurrentPoints)
        {
            IsVHDUsed = true;
            IsDiscountCodeUsed = false;
        }
    }
    private void Reload()
    {
        IsDiscountCodeUsed = false;
        IsVHDUsed = false;
        DiscountCode = string.Empty;
        VHDPoints = 0;
    }
    private void StartCountdown()
    {
        _isCountdownFinished = false; // Reset trạng thái
        _timeLeft = EndTime - DateTime.Now;

        if (_timeLeft > TimeSpan.Zero)
        {
            _timer = new System.Threading.Timer(UpdateCountdown, null, 0, 1000);
        }
    }
    private void UpdateCountdown(object? state)
    {
        // Không làm gì nếu countdown đã hoàn thành
        if (_isCountdownFinished) return;

        _timeLeft = EndTime - DateTime.Now;

        if (_timeLeft <= TimeSpan.Zero)
        {
            _timeLeft = TimeSpan.Zero; // Đảm bảo không âm
            _isCountdownFinished = true; // Đánh dấu đã hoàn thành
            _timer?.Dispose(); // Dừng timer hoàn toàn

            // Gọi hàm xử lý sau countdown
            ExecuteFunctionAfterCountdown();
        }

        // Cập nhật giao diện
        InvokeAsync(StateHasChanged);
    }
    public void Dispose()
    {
        _timer?.Dispose();
    }
    private async Task ExecuteFunctionAfterCountdown()
    {
        Console.WriteLine("Đếm ngược đã hoàn thành!");
        return;
        // Thực hiện các thao tác khác tại đây
    }
}