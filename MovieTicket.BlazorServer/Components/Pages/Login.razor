@page "/"
@using MovieTicket.Application.DataTransferObjs.Auth
@using MovieTicket.BlazorServer.Components.Layout
@layout AdminLayout


<EditForm FormName="login" Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="input-group">
        <span class="input-group-text">Tên tài khoản</span>
        <InputText id="loginUsername" class="form-control" @bind-Value="loginModel.Username" />
    </div>
    <div class="validate mb-3 mt-1"><ValidationMessage For="@(() => loginModel.Username)" /></div>
    <div class="input-group">
        <span class="input-group-text">Mật khẩu</span>
        <InputText id="loginPassword" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>
    <div class="validate mb-3 mt-1">
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>
    <button type="submit" class="btn btn-primary">Đăng nhập</button>
</EditForm>
@code {
    private LoginDTO loginModel = new ();

    private async Task HandleLogin()
    {
        LoginRespone response = await AuthenService.LoginAsync(loginModel);
        if(!response.Flag)
        {
            await JSRuntime.InvokeVoidAsync("alert", response.Message);
        }
        var customState = (CustomAuthenticationStateProvider)AuthStateProvider;
        await customState.UpdateAuthenticationState(response.JWTToken);
        CustomUserClaims claims = DecryptJWTService.DecryptToken(response.JWTToken);
        if(claims.Role == "Admin")
        {
            NavigationManager.NavigateTo("/admin", forceLoad: true);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "Bạn không có quyền truy cập trang này");
            NavigationManager.NavigateTo("/", forceLoad: true);
        }
    }
}